{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\tself.getChild(\"root\").getChild(\"gender\").props.params.clear\n\tself.getChild(\"root\").getChild(\"race\").props.params.clear\n\tself.getChild(\"root\").getChild(\"age\").props.params.clear\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tself.getChild(\"root\").getChild(\"program\").props.params.clear\n\tself.getChild(\"root\").getChild(\"status\").props.params.clear"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {
    "age": -1,
    "endDateTime": "04/16/2021",
    "gender": null,
    "program": null,
    "race": null,
    "startDateTime": "04/16/2021"
  },
  "propConfig": {
    "params.age": {
      "binding": {
        "config": {
          "path": "/root/age.props.params.selectedValues"
        },
        "transforms": [
          {
            "code": "\t#\tvalue \u003d value[1:(len(value) - 1)]\n#\tvalue \u003d value.lstrip(\u0027[\"\u0027)\n#\tvalue \u003d value.rstrip(\u0027\"]\u0027)\n#\tvalue \u003d value.replace(\u0027\\\"\u0027,\"\")\n#\t#value \u003d value.replace(\u0027\\\u0027\u0027,\u0027\\\"\u0027)\n#\tnewValue \u003d \u0027 \u0027.join(\"\u0027{}\u0027,\".format(word.strip()) for word in value.split(\u0027,\u0027))\n#\tnewValue \u003d \"(\" + newValue[0:(len(newValue) - 1)] + \")\"\n#\t#print (\"Output binding\")\n#\t#print newValue\n#\treturn newValue\n\treturn value",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "paramDirection": "inout",
      "persistent": true
    },
    "params.endDateTime": {
      "binding": {
        "config": {
          "path": "session.custom.dateRangeToDate"
        },
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    },
    "params.gender": {
      "binding": {
        "config": {
          "path": "/root/gender.props.params.selectedValues"
        },
        "transforms": [
          {
            "code": "\t#\tvalue \u003d value[1:(len(value) - 1)]\n#\tvalue \u003d value.lstrip(\u0027[\"\u0027)\n#\tvalue \u003d value.rstrip(\u0027\"]\u0027)\n#\tvalue \u003d value.replace(\u0027\\\"\u0027,\"\")\n#\t#value \u003d value.replace(\u0027\\\u0027\u0027,\u0027\\\"\u0027)\n#\tnewValue \u003d \u0027 \u0027.join(\"\u0027{}\u0027,\".format(word.strip()) for word in value.split(\u0027,\u0027))\n#\tnewValue \u003d \"(\" + newValue[0:(len(newValue) - 1)] + \")\"\n#\t#print (\"Output binding\")\n#\t#print newValue\n#\treturn newValue\n\treturn value",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "paramDirection": "inout",
      "persistent": true
    },
    "params.program": {
      "binding": {
        "config": {
          "path": "/root/program.props.params.selectedValues"
        },
        "transforms": [
          {
            "code": "\t#\tvalue \u003d value[1:(len(value) - 1)]\n#\tvalue \u003d value.lstrip(\u0027[\"\u0027)\n#\tvalue \u003d value.rstrip(\u0027\"]\u0027)\n#\tvalue \u003d value.replace(\u0027\\\"\u0027,\"\")\n#\t#value \u003d value.replace(\u0027\\\u0027\u0027,\u0027\\\"\u0027)\n#\tnewValue \u003d \u0027 \u0027.join(\"\u0027{}\u0027,\".format(word.strip()) for word in value.split(\u0027,\u0027))\n#\tnewValue \u003d \"(\" + newValue[0:(len(newValue) - 1)] + \")\"\n#\t#print (\"Output binding\")\n#\t#print newValue\n#\treturn newValue\n\treturn value",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "paramDirection": "input",
      "persistent": true
    },
    "params.race": {
      "binding": {
        "config": {
          "path": "/root/race.props.params.selectedValues"
        },
        "transforms": [
          {
            "code": "\t#\tvalue \u003d value[1:(len(value) - 1)]\n#\tvalue \u003d value.lstrip(\u0027[\"\u0027)\n#\tvalue \u003d value.rstrip(\u0027\"]\u0027)\n#\tvalue \u003d value.replace(\u0027\\\"\u0027,\"\")\n#\t#value \u003d value.replace(\u0027\\\u0027\u0027,\u0027\\\"\u0027)\n#\tnewValue \u003d \u0027 \u0027.join(\"\u0027{}\u0027,\".format(word.strip()) for word in value.split(\u0027,\u0027))\n#\tnewValue \u003d \"(\" + newValue[0:(len(newValue) - 1)] + \")\"\n#\t#print (\"Output binding\")\n#\t#print newValue\n#\treturn newValue\n\treturn value",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "paramDirection": "inout",
      "persistent": true
    },
    "params.startDateTime": {
      "binding": {
        "config": {
          "path": "session.custom.dateRangeFromDate"
        },
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 52
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "gender"
        },
        "position": {
          "basis": "16.9%"
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "queryPath": "Filter/getGender"
              },
              "type": "query"
            }
          }
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "gender",
            "placeholder": "Gender",
            "selection": -1
          },
          "path": "Shelter/Templates/Filter/DatasetFilter_MultiDropDown",
          "style": {
            "marginBottom": 8,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 8
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "race"
        },
        "position": {
          "basis": "17.6%"
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "queryPath": "Filter/getRace"
              },
              "type": "query"
            }
          }
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "race",
            "placeholder": "Race",
            "selection": -1
          },
          "path": "Shelter/Templates/Filter/DatasetFilter_MultiDropDown",
          "style": {
            "marginBottom": 8,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 8
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "age"
        },
        "position": {
          "basis": "13.3%"
        },
        "props": {
          "params": {
            "filterData": [
              {
                "label": "\u003c18",
                "value": "\u003c18"
              },
              {
                "label": "18-24",
                "value": "18-24"
              },
              {
                "label": "25-34",
                "value": "25-34"
              },
              {
                "label": "35-44",
                "value": "35-44"
              },
              {
                "label": "45-55",
                "value": "45-55"
              },
              {
                "label": "\u003e55",
                "value": "\u003e55"
              }
            ],
            "filterName": "Age",
            "selectedValues": -1
          },
          "path": "Shelter/Templates/MultiselectFilter",
          "style": {
            "marginBottom": 8,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 8
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "program"
        },
        "position": {
          "basis": "27.1%"
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "queryPath": "Shelter/WaitList/WaitListProgramSelect"
              },
              "type": "query"
            }
          }
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "program",
            "placeholder": "Program",
            "selection": -1
          },
          "path": "Shelter/Templates/Filter/DatasetFilter_MultiDropDown",
          "style": {
            "marginBottom": 8,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 8
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "status"
        },
        "position": {
          "basis": "15.4%"
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "status",
            "options": {
              "$": [
                "ds",
                192,
                1618398168481
              ],
              "$columns": [
                {
                  "data": [
                    "Active",
                    "Inactive"
                  ],
                  "name": "status",
                  "type": "String"
                }
              ]
            },
            "placeholder": "Status",
            "selection": -1
          },
          "path": "1_TEMPLATES/Filtering/Filters/DatasetFilter_SingleDropDown",
          "style": {
            "marginBottom": 8,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 8
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "filler"
        },
        "position": {
          "basis": "10.3%"
        },
        "props": {
          "style": {
            "classes": "Table/Filter_Header_Detail",
            "paddingLeft": "40px"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "searchBar"
        },
        "position": {
          "basis": "19.5%"
        },
        "props": {
          "path": "1_TEMPLATES/Filtering/Filters/Search_Bar",
          "style": {
            "marginBottom": 8,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 8
          }
        },
        "type": "ia.display.view"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tself.getSibling(\"gender\").props.params.clear\u003dTrue\n\tself.getSibling(\"race\").props.params.clear\u003dTrue\n\tself.getSibling(\"age\").props.params.clear\u003dTrue\n\tself.getSibling(\"program\").props.params.clear\u003dTrue\n\tself.getSibling(\"status\").props.params.clear\u003dTrue"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "EmbeddedView"
        },
        "position": {
          "basis": "5%"
        },
        "props": {
          "path": "1_TEMPLATES/Filtering/Filters/ClearFilters",
          "style": {
            "marginBottom": 8,
            "marginLeft": 5,
            "marginRight": 5,
            "marginTop": 8
          }
        },
        "type": "ia.display.view"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "style": {
        "classes": "Table/Filter_Header"
      }
    },
    "type": "ia.container.flex"
  }
}