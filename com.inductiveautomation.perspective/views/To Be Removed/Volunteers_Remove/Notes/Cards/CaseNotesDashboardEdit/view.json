{
  "custom": {
    "Name": "",
    "SelectVolunteerOrGroup": null,
    "edit_data": {
      "Name": "",
      "employee_id": 1,
      "employee_name": "",
      "hmis": -1,
      "note": "",
      "participant_id": 519,
      "participant_name": "",
      "services": [],
      "volunteer_name": ""
    },
    "func_add_service": true,
    "func_remove_service": false
  },
  "params": {
    "Name": "",
    "output_id": -1,
    "output_name": " ",
    "row_data": {
      "Name": "",
      "employee_id": 1,
      "employee_name": "",
      "hmis": -1,
      "note": "",
      "note_id": -1,
      "participant_id": 519,
      "participant_name": "",
      "services": [],
      "volunteer": false,
      "volunteer_name": ""
    },
    "search": true,
    "view_height": 400,
    "volunteer": true
  },
  "propConfig": {
    "custom.Name": {
      "persistent": true
    },
    "custom.edit_data": {
      "persistent": true
    },
    "custom.edit_data.id": {
      "binding": {
        "config": {
          "path": "view.params.row_data.id"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\t#Move the row data to the edit data any time the row id changes\n\tself.custom.edit_data \u003d self.params.row_data"
      }
    },
    "custom.edit_data.note_id": {
      "binding": {
        "config": {
          "path": "view.params.row_data.note_id"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\t#Move the row data to the edit data any time the row id changes\n\tself.custom.edit_data \u003d self.params.row_data"
      }
    },
    "custom.edit_data.volunteer": {
      "binding": {
        "config": {
          "path": "view.params.row_data.volunteer"
        },
        "type": "property"
      }
    },
    "custom.edit_data[0].id": {
      "binding": {
        "config": {
          "path": "view.params.drugscreenlogid"
        },
        "type": "property"
      }
    },
    "custom.func_add_service": {
      "onChange": {
        "enabled": null,
        "script": "\tif currentValue.value:\n\t\tsystem.perspective.print(\u0027Add Service\u0027)\n\t\tinstances \u003d self.getChild(\"root\").getChild(\"FlexRepeater\").props.instances\n\t\tnull \u003d None\n\t\t\n\t\tobject \u003d {\n\t\t  \"instanceStyle\": {\n\t\t    \"classes\": \"\"\n\t\t  },\n\t\t  \"instancePosition\": {},\n\t\t  \"employee_id\": null,\n\t\t  \"enrollment_id\": null,\n\t\t  \"service_id\": null,\n\t\t  \"row_num\": len(instances)\n\t\t}\n\t\t#append to the list\n\t\tinstances.append(object)\n  \t\tself.getChild(\"root\").getChild(\"FlexRepeater\").props.instances \u003d instances\n\t\t#Reset the script trigger\n\tself.custom.func_add_service \u003d False\t"
      },
      "persistent": true
    },
    "params.Name": {
      "paramDirection": "inout",
      "persistent": true
    },
    "params.output_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.output_name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.note_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.participant_name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.services": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.search": {
      "paramDirection": "inout",
      "persistent": true
    },
    "params.view_height": {
      "paramDirection": "output",
      "persistent": true
    },
    "params.volunteer": {
      "paramDirection": "inout",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 589,
      "width": 1043
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\u0027Participant:\u0027 + \r\nif({view.custom.edit_data.note_id} \u003e -1,{view.custom.edit_data.volunteer_id},{view.params.output_id}) + \r\n\u0027, HMIS:\u0027 +\r\n{view.custom.edit_data.category} + \r\n\u0027, Note:\u0027 +\r\n{view.custom.edit_data.note}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "custom": {
          "NewNoteGroup": "",
          "NewNoteVolunteer": "",
          "searchSelection": [
            {
              "age": 57,
              "dob": "Thu Sep 24 1964 19:00:00 GMT-0500 (Central Daylight Time)",
              "email": "bigjohnpyl@gmail.com",
              "firstName": "John",
              "gender": "Male",
              "humanId": 13272,
              "lastName": "Pyl",
              "phone": null,
              "race": null,
              "rowId": 0
            }
          ]
        },
        "meta": {
          "name": "EmbeddedView Header"
        },
        "position": {
          "basis": "25px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.Text": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.note_id"
              },
              "transforms": [
                {
                  "expression": "if({value} \u003d -1,\u0027New Note: \u0027 + {view.params.output_name},\u0027Edit Note: \u0027 + {view.params.row_data.Name})\r\n",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Volunteers/Notes/Cards/EditNoteHeader"
        },
        "type": "ia.display.view"
      },
      {
        "custom": {
          "searchSelection": [
            {
              "age": 57,
              "dob": "Thu Sep 24 1964 19:00:00 GMT-0500 (Central Daylight Time)",
              "email": "bigjohnpyl@gmail.com",
              "firstName": "John",
              "gender": "Male",
              "humanId": 13272,
              "lastName": "Pyl",
              "phone": null,
              "race": null,
              "rowId": 0
            }
          ]
        },
        "meta": {
          "name": "EmbeddedView Row1"
        },
        "position": {
          "basis": "110px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.note": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.note"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Volunteers/Notes/Cards/Row1",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t#system.perspective.print(\"New Case Note Button Pressed\")\n\t#Send the message to refresh the table\n#\tmessageType \u003d \u0027refreshCaseNotesDashboard\u0027\n#\tsystem.perspective.sendMessage(messageType)\n\t#Send a message to clear the search box\n#\tmessageType \u003d \u0027ResetVolunteerSearch\u0027\n#\tsystem.perspective.sendMessage(messageType)\n\t#Show the search box\n\tself.view.params.search \u003d True\n\tself.view.params.view_height \u003d 400"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_new"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginLeft": "20px",
                "marginTop": "5px"
              },
              "text": "New Note"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t\n\tproject \u003d \"RITI\"\n\t### Declare parameters \n\tnote_id \u003d self.view.custom.edit_data.note_id\n\ttime_created \u003d system.date.now()\n\tuser_name \u003d self.session.props.auth.user.userName\n\tvolunteer \u003d self.view.params.volunteer\n\tsystem.perspective.print(volunteer)\n\tid \u003d self.view.params.output_id\n\t\t\n\tnote \u003d self.view.custom.edit_data.note\n\n\t\n\t## Check if parameters are filled in correctly \n\tvalid \u003d True\n\tif (note_id is None):\n\t\tvalid \u003d False\n\t\tsystem.perspective.print(\"Note ID Error\")\n\telif valid \u003d\u003d True:\n\t\tsystem.perspective.print(\"Data Valid\")\n\tsystem.perspective.print(note_id)\n\t### Check if data is valid otherwise show error message.\n\tif valid:\n#\t\ttry:\n\t\t### Check if the user is creating new data\n\t\tif note_id \u003d\u003d -1:#Insert new data, no row_id\n\t\t\t#system.perspective.print(\"Insert New Data\")\n\t\t\tif volunteer:\n\t\t\t\tpath \u003d \"Volunteers/Notes/NotesDetailInsert\"\n\t\t\t\tparameters \u003d {\n\t\t\t\t\t\"volunteerId\":id,\n\t\t\t\t\t\"note\":note,\n\t\t\t\t\t\"userName\":user_name\n\t\t\t\t}\n\t\t\t\tsystem.perspective.print(parameters)\n\t\t\telse:\n\t\t\t\tpath \u003d \"Volunteers/Notes/NotesDetailGroupInsert\"\n\t\t\t\tparameters \u003d {\n\t\t\t\t\t\"groupId\":id,\n\t\t\t\t\t\"note\":note,\n\t\t\t\t\t\"userName\":user_name\n\t\t\t\t}\n\t\t\t\tsystem.perspective.print(parameters)\n\t\t\tnewnote \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\tsystem.perspective.print(newnote)\n\t\t\t#system.perspective.print(\"Insert Note\")\n\t\t\t#system.perspective.print(note_row)\n\t\t\t#Insert the services\n\t\t\n\t\t##### Check if the user is editing existing data\n\t\telif note_id \u003e\u003d 0:#Update existing data on specified row_id\n\t\t\t#system.perspective.print(\"Update Exisiting Data\")\n\t\t\tpath \u003d \"Volunteers/Notes/NotesDetailUpdate\"\n\t\t\tparameters \u003d {\n\t\t\t\t\"id\": note_id,\n\t\t\t\t\"note\":note,\n\t\t\t\t\"userName\":user_name\n\t\t\t}\n\t\t\tnothing \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t##### Refresh the table\n\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshVolunteerNotesDashboardData\", payload\u003d{}, scope\u003d\"session\")\n\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshVolunteerNotesDashboard\", payload\u003d{}, scope\u003d\"session\")\n\t\tsystem.perspective.sendMessage(messageType\u003d\"ResetEditNotes\", payload\u003d{}, scope\u003d\"session\")\n\t\tself.view.custom.edit_data.note \u003d \u0027\u0027\n#\t\texcept:\n#\t\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\t\n\telse:\n\t\tself.getSibling(\"Label\").showMessage(\"Please fill in all the fields correctly before saving.\")\n\t\n#\tself.view.custom.edit_data.note \u003d \u0027\u0027\n#\tself.view.params.view_height \u003d 200\n#\t#self.parent.parent.getChild(\"EmbeddedView Header\").props.params.Text \u003d \u0027\u0027\n#\t#self.view.custom.SelectVolunteerOrGroup \u003d \u0027\u0027\n#\tself.view.params.output_name \u003d \u0027\u0027\n#\tself.view.params.output_id \u003d -1\n#\tname \u003d \u0027\u0027\n#\tself.view.params.SelectVolunteerOrGroup \u003d \u0027\u0027\n#\t#self.props.text \u003d \u0027\u0027\n#\t#if({self.view.custom.edit_data.note_id} \u003d -1,\u0027New Note: \u0027 + \u0027\u0027,\u0027Edit Note: \u0027 + \u0027\u0027)\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_save"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "if({view.custom.edit_data.note_id} \u003e -1,True,\r\nif({view.params.output_id} \u003e -1, True, False))"
                  },
                  "type": "expr"
                }
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "if({view.custom.edit_data.note_id} \u003e -1,\u0027Update Note\u0027,\u0027Save Note\u0027)"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              }
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t### Declare parameters\n\tproject \u003d \"RITI\" \n\tnote_id \u003d self.view.custom.edit_data.note_id\n\t\t\n\t## Check if parameters are filled in correctly \n\tif (note_id is None) or (int(note_id) \u003c 0):\n\t\tvalid \u003d False\n\t\tsystem.perspective.print(\"Note ID Error\")\n\telse:\n\t\tvalid \u003d True\n\t\tsystem.perspective.print(\"Data Valid\")\n\t\t\t\n\t### Check if data is valid otherwise show error message.\n\tif valid:\n\t\ttry:\n\t\t\t#Query and delete all services linked to the case note\n\t\t\tpath \u003d \"Volunteers/Notes/NotesDelete\"\n\t\t\tparameters \u003d {\"noteId\":note_id}\n\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\t##### Refresh the table\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshVolunteerNotesDashboardData\", payload\u003d{}, scope\u003d\"session\")\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshVolunteerNotesDashboard\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t#system.perspective.sendMessage(messageType\u003d\"DeleteEditNotes\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\n\t\texcept:\n\t\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while deleting data. Please try again.\")\t\n\telse:\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\n\t\n\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_delete"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "if({view.custom.edit_data.note_id} \u003d -1, False, True)"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "Delete Note"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Please fill in all the fields correctly before saving."
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "50px",
          "shrink": 0
        },
        "props": {
          "style": {
            "borderTopColor": "#9db8d1",
            "borderTopStyle": "solid",
            "borderTopWidth": "1px",
            "classes": "Background/Default",
            "marginTop": "5px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "type": "ia.container.flex"
  }
}