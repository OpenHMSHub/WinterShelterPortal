{
  "custom": {},
  "params": {
    "hoursPast6Months": {},
    "lastServiceEndDate": null,
    "lastServiceStartDate": null,
    "memberCount": null,
    "nextServiceEndDate": null,
    "nextServiceStartDate": null,
    "searchText": ""
  },
  "propConfig": {
    "params.hoursPast6Months": {
      "onChange": {
        "enabled": null,
        "script": "\tself.getChild(\"root\").getChild(\"Table\").filterTable()"
      },
      "paramDirection": "input",
      "persistent": true
    },
    "params.lastServiceEndDate": {
      "onChange": {
        "enabled": null,
        "script": "\tself.getChild(\"root\").getChild(\"Table\").filterTable()"
      },
      "paramDirection": "input",
      "persistent": true
    },
    "params.lastServiceStartDate": {
      "onChange": {
        "enabled": null,
        "script": "\tself.getChild(\"root\").getChild(\"Table\").filterTable()"
      },
      "paramDirection": "input",
      "persistent": true
    },
    "params.memberCount": {
      "onChange": {
        "enabled": null,
        "script": "\tself.getChild(\"root\").getChild(\"Table\").filterTable()"
      },
      "paramDirection": "input",
      "persistent": true
    },
    "params.nextServiceEndDate": {
      "onChange": {
        "enabled": null,
        "script": "\tself.getChild(\"root\").getChild(\"Table\").filterTable()"
      },
      "paramDirection": "input",
      "persistent": true
    },
    "params.nextServiceStartDate": {
      "onChange": {
        "enabled": null,
        "script": "\tself.getChild(\"root\").getChild(\"Table\").filterTable()"
      },
      "paramDirection": "input",
      "persistent": true
    },
    "params.searchText": {
      "binding": {
        "config": {
          "path": "session.custom.filters.P_1_TEMPLATES_Filtering_Filters_Search_Bar[0].value"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\tself.getChild(\"root\").getChild(\"Table\").filterTable()"
      },
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 620,
      "width": 873
    }
  },
  "root": {
    "children": [
      {
        "events": {
          "component": {
            "onRowClick": {
              "config": {
                "script": "\tselectedColumn \u003d self.props.selection.selectedColumn\n\tif selectedColumn \u003d\u003d \"Name\": \n\t\ttrackID \u003d self.props.data[event.row][\u0027id\u0027]\n#\t\ttrackID \u003d self.props.data.getValueAt(event.row,\u0027ID\u0027)\n\t\tsystem.perspective.navigate(\"/Volunteers/Groups/Detail/\"+str(trackID))\n#\telif selectedColumn \u003d\u003d \"Options\":\n#\t\ttrackID \u003d self.props.data[event.row][\u0027id\u0027]\n##\t\ttrackID \u003d self.props.data.getValueAt(event.row,\u0027ID\u0027)\n#\t\tid \u003d \"PreviewVolunteer\" \n#\t\tparams \u003d {\"trackID\":trackID}\n#\t\tif self.custom.DockID !\u003d trackID:\n#\t\t\tsystem.perspective.openDock(id\u003did,params\u003dparams)\n#\t\t\tpayload \u003d {\"trackID\":trackID}\n#\t\t\tsystem.perspective.sendMessage(\"DockUpdate\", payload, scope \u003d \u0027page\u0027 )\n#\t\telse:\n#\t\t\tsystem.perspective.toggleDock(id\u003did,params\u003dparams)\n#\t\tself.custom.DockID \u003d trackID\n\telse:\n\t\tpass"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Table"
        },
        "position": {
          "basis": "100%"
        },
        "propConfig": {
          "custom.filteredData": {
            "binding": {
              "config": {
                "struct": {
                  "filters": "{this.custom.filters}",
                  "source": "hasChanged({this.custom.sqlData})"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\treturn filters.applyFiltersOnDataset(self.custom.sqlData, self.custom.filters)",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          },
          "custom.filters": {
            "binding": {
              "config": {
                "path": "session.custom.filters"
              },
              "transforms": [
                {
                  "code": "\treturn filters.retrievePageFilters(value, self.page.props.pageId)\n\t",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "custom.sqlData": {
            "binding": {
              "config": {
                "parameters": {
                  "search": "{view.params.searchText}"
                },
                "queryPath": "Volunteers/Group/Select Groups"
              },
              "type": "query"
            }
          },
          "props.data": {
            "binding": {
              "config": {
                "path": "this.custom.filteredData"
              },
              "transforms": [
                {
                  "code": "\t####THIS SECTION FOR INFORMATION ONLY####\n\t#Example Volunteer data object should look like this:\n\t{\n\t\t  \"NextServiceDate\": \"4/4/1975\",\n\t\t  \"Next Assignment\": \"Next Assignment\",\n\t\t  \"LastServiceDate\": \"4/4/2019\",\n\t\t  \"Last Assignment\": \"Last Assignment\",\n\t\t  \"Name\": {\n\t\t    \"style\": {\n\t\t      \"color\": \"#0c4e85\",\n\t\t      \"cursor\": \"pointer\",\n\t\t      \"fontFamily\": \"Proxima Nova ExCn Medium\\n\",\n\t\t      \"text-align\": \"left\"\n\t\t    },\n\t\t    \"value\": \"Tyler George Adams\"\n\t\t  },\n\t\t  \"Options\": \"\",\n\n\t\t}\n\t####END INFORMATION####\n\t\n\t####BEGIN ACTUAL SCRIPT####\n\t#Volunteers is the data object to return\n\tvolunteers \u003d []\n\n\t#Iterate over the results of the query\n\tfor row in range(value.getRowCount()):\n\t\t#v is an individual volunteer to appends to \u0027volunteers\u0027\n\t\tv \u003d {}\n\t\t#n is the \u0027name\u0027 attribute of \u0027v\u0027\n\t\tn \u003d {}\n\t\t#s is the \u0027style\u0027 attribute of \u0027n\u0027\n\t\ts \u003d {}\n\t\t\n\t\t#Map query results into correct attributes\n\t\tv[\u0027NextServiceDate\u0027] \u003d value.getValueAt(row, \"nextServiceDate\")\n\t\tv[\u0027NextAssignment\u0027] \u003d value.getValueAt(row, \"nextAssignment\")\n\t\tv[\u0027LastServiceDate\u0027] \u003d value.getValueAt(row, \"lastServiceDate\")\n\t\tv[\u0027LastAssignment\u0027] \u003d value.getValueAt(row, \"lastAssignment\")\n\t\tv[\u0027MemberCount\u0027] \u003d value.getValueAt(row, \"Member Count\")\n\t\tv[\u0027GroupLeader\u0027] \u003d value.getValueAt(row, \"leader\")\n\t\tv[\u0027HoursPast6Months\u0027] \u003d value.getValueAt(row, \"hoursPastSixMonths\")\n\t\tv[\u0027id\u0027] \u003d value.getValueAt(row, \"id\")\n\t\t\n\t\t#Style is static\n\t\ts[\u0027color\u0027] \u003d \u0027#0c4e85\u0027\n\t\ts[\u0027cursor\u0027] \u003d \"pointer\"\n\t\ts[\u0027fontFamily\u0027] \u003d \"Proxima Nova ExCn Medium\"\n\t\ts[\u0027text-align\u0027] \u003d \"left\"\n\t\t\n\t\t#Build the \u0027name\u0027 attribute\n\t\tn[\u0027style\u0027] \u003d s\n\t\tn[\u0027value\u0027] \u003d str(value.getValueAt(row, \"Name\"))\n\t\tv[\u0027Name\u0027] \u003d n\n\t\t\n\t\tv[\u0027Options\u0027] \u003d \u0027\u0027\n\t\t\n\t\t\n\t\t#Append the individual volunteer to the volunteerss object\n\t\tvolunteers.append(v)\n\t\t\n\treturn volunteers",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.filter.text": {
            "binding": {
              "config": {
                "path": "view.params.searchText"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "cells": {
            "style": {
              "classes": "Table/Cell_Dashboard"
            }
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Options",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": " "
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "view",
              "resizable": false,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "Volunteers/Dashboard/Components/Tables/Templates/TableOptions",
              "visible": true,
              "width": 40
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Name",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "background-origin": "content-box",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "paddingRight": "38px",
                  "wordWrap": "break-word"
                },
                "title": "Name"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "MemberCount",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "background-origin": "content-box",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "paddingRight": "65px",
                  "wordWrap": "break-word"
                },
                "title": "Member Count"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "GroupLeader",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "background-origin": "content-box",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "paddingRight": "25px",
                  "wordWrap": "break-word"
                },
                "title": "Group Leader"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "NextServiceDate",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "background-origin": "content-box",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "paddingRight": "0px",
                  "wordWrap": "break-word"
                },
                "title": "Next Service Date"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "NextAssignment",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "background-origin": "content-box",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "paddingRight": "0px",
                  "wordWrap": "break-word"
                },
                "title": "Next Event"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "LastServiceDate",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "background-origin": "content-box",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "paddingRight": "0px",
                  "wordWrap": "break-word"
                },
                "title": "Last Service Date"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "LastAssignment",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "background-origin": "content-box",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "paddingRight": "0px",
                  "wordWrap": "break-word"
                },
                "title": "Last Event"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "HoursPast6Months",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "background-origin": "content-box",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "paddingRight": "0px",
                  "wordWrap": "break-word"
                },
                "title": "Hours Past 6 Months"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "id",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": ""
            }
          ],
          "filter": {},
          "headerGroups": [
            [
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Name"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "ID"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Birth Date"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Gender"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Intake Date"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Last Action"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Suspension"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Shelter"
              }
            ]
          ],
          "rows": {
            "striped": {
              "enabled": false
            }
          },
          "style": {
            "classes": "Background/Default"
          }
        },
        "scripts": {
          "customMethods": [
            {
              "name": "filterTable",
              "params": [],
              "script": "\t# implement your method here\n\tif self.custom.sqlData \u003d\u003d None :\n\t\treturn\n\tdataset \u003d self.custom.sqlData\n\theaders \u003d headers \u003d [\"Name\", \"Member Count\", \"id\", \"nextServiceDate\", \"nextAssignment\", \"lastServiceDate\", \"lastAssignment\", \"hoursPastSixMonths\",\"leader\"]\n\tfilteredDataset \u003d dataset\n\t\n\t#hours past 6 months\n\tif self.view.params.hoursPast6Months !\u003d None and self.view.params.hoursPast6Months:\n\t\t\tfilter \u003d self.view.params.hoursPast6Months\t\t\n\t\t\t# get rows\n\t\t\treturnDataset \u003d []\n\t\t\tfor i in range(filteredDataset.getRowCount()) :\n\t\t\t\toneRow \u003d []\n\t\t\t\tcell \u003d filteredDataset.getValueAt(i,\"hoursPastSixMonths\")\n\t\t\t\t\n\t\t\t\tif cell !\u003d None and cell:\t\t\t\t\n\t\t\t\t\t#check if row matches condition \u0026 add row to filtered set.\n\t\t\t\t\tfor item in filter :\n\t\t\t\t\t\tsystem.perspective.print(message \u003d str(item) , destination \u003d \"all\")\n\t\t\t\t\t\tmin \u003d item[\u0027min\u0027]\n\t\t\t\t\t\tmax \u003d item[\u0027max\u0027]\n\t\t\t\t\t\tif cell \u003e\u003d min and cell \u003c\u003d max :\t\t\t\t \n\t\t\t\t\t\t\t for x in range(filteredDataset.getColumnCount()) :\n\t\t\t\t\t\t\t\toneRow.append(filteredDataset.getValueAt(i,x))\n\t\t\t\t\t\t\t returnDataset.append(oneRow)\n\t\t\t\t\t\t\t break\t\t\t\n\t\t\tfilteredDataset \u003d system.dataset.toDataSet(headers, returnDataset)\n\t\n\t#member count\n\tif self.view.params.memberCount !\u003d None and self.view.params.memberCount:\n\t\tfilter \u003d self.view.params.memberCount\n\t\t# get rows\n\t\treturnDataset \u003d []\n\t\tfor i in range(filteredDataset.getRowCount()) :\n\t\t\toneRow \u003d []\n\t\t\tcell \u003d filteredDataset.getValueAt(i,\"Member Count\")\n\t\t\t\n\t\t\tif cell !\u003d None and cell:\t\t\t\t\n\t\t\t\t#check if row matches condition \u0026 add row to filtered set.\n\t\t\t\tsystem.perspective.print(message \u003d str(cell) , destination \u003d \"all\")\n\t\t\t\tfor item in filter :\n\t\t\t\t\t\n\t\t\t\t\tmin \u003d item[\u0027min\u0027]\n\t\t\t\t\tmax \u003d item[\u0027max\u0027]\n\t\t\t\t\tif cell \u003e\u003d min and cell \u003c\u003d max :\t\t\t\t \n\t\t\t\t\t\t for x in range(filteredDataset.getColumnCount()) :\n\t\t\t\t\t\t\toneRow.append(filteredDataset.getValueAt(i,x))\n\t\t\t\t\t\t returnDataset.append(oneRow)\n\t\t\t\t\t\t break\t\t\t\n\t\tfilteredDataset \u003d system.dataset.toDataSet(headers, returnDataset)\n\t\n\t\t\t\n\t# last service date\n\tfromDate \u003d self.view.params.lastServiceStartDate\n\ttoDate \u003d self.view.params.lastServiceEndDate\n\tif fromDate and toDate:\t\n\t\treturnDataset \u003d []\n\t\tfor i in range (filteredDataset.getRowCount()):\n\t\t\toneRow \u003d[]\n\t\t\tcolDate \u003d filteredDataset.getValueAt(i,\"lastServiceDate\")\n\t\t\tif colDate !\u003d None:\n\t\t\t\tcolDate \u003d system.date.setTime(colDate, 0, 0, 0)\n\t\t\t\tparseFrom \u003d system.date.setTime(fromDate,0,0,0)\n\t\t\t\tparseTo \u003d system.date.setTime(toDate,0,0,0)\n\t\t\t\t\n\t\t\t\tif system.date.isBetween(colDate,parseFrom,parseTo):\n\t\t\t\t\t#oneRow \u003d [filteredDataset.getValueAt(i,0),filteredDataset.getValueAt(i,1),filteredDataset.getValueAt(i,2),filteredDataset.getValueAt(i,3),filteredDataset.getValueAt(i,4),filteredDataset.getValueAt(i,5),filteredDataset.getValueAt(i,6),filteredDataset.getValueAt(i,7),filteredDataset.getValueAt(i,8),filteredDataset.getValueAt(i,9)]\n\t\t\t\t\tfor x in range(filteredDataset.getColumnCount()) : \n\t\t\t\t\t\toneRow.append(filteredDataset.getValueAt(i,x))\t\t\t\n\t\t\t\t\treturnDataset.append(oneRow)\n\n\t\tfilteredDataset \u003d system.dataset.toDataSet(headers, returnDataset)\n\t\n\t# next service date\n\tfromDate \u003d self.view.params.nextServiceStartDate\n\ttoDate \u003d self.view.params.nextServiceEndDate\n\tif fromDate and toDate:\t\n\t\treturnDataset \u003d []\n\t\tfor i in range (filteredDataset.getRowCount()):\n\t\t\toneRow \u003d[]\n\t\t\tcolDate \u003d filteredDataset.getValueAt(i,\"nextServiceDate\")\n\t\t\tif colDate !\u003d None:\n\t\t\t\tcolDate \u003d system.date.setTime(colDate, 0, 0, 0)\n\t\t\t\tparseFrom \u003d system.date.setTime(fromDate,0,0,0)\n\t\t\t\tparseTo \u003d system.date.setTime(toDate,0,0,0)\n\t\t\t\t\n\t\t\t\tif system.date.isBetween(colDate,parseFrom,parseTo):\n\t\t\t\t\t#oneRow \u003d [filteredDataset.getValueAt(i,0),filteredDataset.getValueAt(i,1),filteredDataset.getValueAt(i,2),filteredDataset.getValueAt(i,3),filteredDataset.getValueAt(i,4),filteredDataset.getValueAt(i,5),filteredDataset.getValueAt(i,6),filteredDataset.getValueAt(i,7),filteredDataset.getValueAt(i,8),filteredDataset.getValueAt(i,9)]\n\t\t\t\t\tfor x in range(filteredDataset.getColumnCount()) : \n\t\t\t\t\t\toneRow.append(filteredDataset.getValueAt(i,x))\t\t\t\n\t\t\t\t\treturnDataset.append(oneRow)\n\n\t\tfilteredDataset \u003d system.dataset.toDataSet(headers, returnDataset)\n\t\n\t# search next/last event.\n\tsearchText \u003d self.view.params.searchText\t\t\n\treturnDataset \u003d []\n\tif searchText !\u003d \"\":\n\t\tfor i in range (filteredDataset.getRowCount()):\n\t\t\tfor j in [4,6]:\n\t\t\t\toneRow \u003d []\n\t\t\t\tcellValue \u003d filteredDataset.getValueAt(i,j)\n\t\t\t\tif cellValue!\u003dNone:\n\t\t\t\t\tif str(cellValue).lower().find(searchText) !\u003d -1 :\n\t\t\t\t\t\t#oneRow \u003d [originaldataset.getValueAt(i,0),originaldataset.getValueAt(i,1),originaldataset.getValueAt(i,2),originaldataset.getValueAt(i,3),originaldataset.getValueAt(i,4),originaldataset.getValueAt(i,5),originaldataset.getValueAt(i,6),originaldataset.getValueAt(i,7),originaldataset.getValueAt(i,8),originaldataset.getValueAt(i,9),originaldataset.getValueAt(i,10),originaldataset.getValueAt(i,11)]\n\t\t\t\t\t#\tfor x in range(originaldataset.getColumnCount()):\n\t\t\t\t\t\t#\toneRow.append(originaldataset.getValueAt(i,x))\n\t\t\t\t\t\toneRow \u003d [filteredDataset.getValueAt(i,x) for x in range(filteredDataset.getColumnCount())]\n\t\t\t\t\t\treturnDataset.append(oneRow)\n\t\t\t\t\t\tbreak\n\t\tfilteredDataset \u003d system.dataset.toDataSet(headers, returnDataset)\n\n\tself.custom.filteredData \u003d filteredDataset"
            }
          ],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "refreshGroupsTable",
              "pageScope": true,
              "script": "\tself.refreshBinding(\"custom.sqlData\")\n\tself.refreshBinding(\"props.data\")",
              "sessionScope": true,
              "viewScope": true
            },
            {
              "messageType": "full-text-filter",
              "pageScope": true,
              "script": "\t\n\tsystem.perspective.print(\"fts\")\n\tfilters \u003d self.custom.filters\n\t_val \u003d payload[\"value\"]\n\t_type \u003d \"full_text\"\n\tfilter \u003d {\n\t\t\"key\":\"\",\n\t\t\"value\":_val,\n\t\t\"type\":_type\n\t}\n\n\tfor i,f in enumerate(filters):\n\n\t\tif f[\"type\"] \u003d\u003d \"full_text\":\n\t\t\tfilters.pop(i)\n\t\t\tbreak\n\t\n\tif len(_val):\n\t\tfilters.append(filter)\n\n\tself.custom.filters \u003d filters\n\tself.refreshBinding(\"props.data\")",
              "sessionScope": true,
              "viewScope": false
            },
            {
              "messageType": "volunteersEventFilter",
              "pageScope": true,
              "script": "\t# implement your handler here\n\tself.view.params.searchText \u003d payload[\u0027searchText\u0027].lower() ",
              "sessionScope": true,
              "viewScope": false
            }
          ]
        },
        "type": "ia.display.table"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}