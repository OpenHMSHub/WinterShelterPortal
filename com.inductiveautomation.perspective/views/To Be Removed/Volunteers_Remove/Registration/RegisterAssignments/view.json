{
  "custom": {},
  "params": {},
  "props": {
    "defaultSize": {
      "width": 600
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "EmbeddedView"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "params": {
            "dockId": "RegisterAssignment",
            "text": "Activity Registration"
          },
          "path": "Volunteers/Registration/Cards/RegistrationHeader",
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Name"
                },
                "position": {
                  "shrink": 0
                },
                "props": {
                  "params": {
                    "inputText": "",
                    "text": "Activity Name"
                  },
                  "path": "Volunteers/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Descritption"
                },
                "position": {
                  "shrink": 0
                },
                "props": {
                  "params": {
                    "inputText": "",
                    "text": "Description*"
                  },
                  "path": "Volunteers/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainer Left"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "props": {
              "direction": "column",
              "style": {
                "paddingLeft": "25px",
                "paddingRight": "20px"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "facilitator"
                },
                "propConfig": {
                  "props.params.Options": {
                    "binding": {
                      "config": {
                        "queryPath": "Volunteers/Facilitator/SelectFacilitatorNameOnly",
                        "returnFormat": "json"
                      },
                      "transforms": [
                        {
                          "code": "\toptions \u003d []\n\tfor fac in value:\n\t\toptions.append({\u0027value\u0027:fac[\u0027id\u0027], \u0027label\u0027:fac[\u0027name\u0027]})\n\treturn options",
                          "type": "script"
                        }
                      ],
                      "type": "query"
                    }
                  }
                },
                "props": {
                  "params": {
                    "SelectedValue": null,
                    "Text": "Facilitator"
                  },
                  "path": "Volunteers/Registration/Cards/SelectionInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "place"
                },
                "propConfig": {
                  "props.params.Options": {
                    "binding": {
                      "config": {
                        "queryPath": "Volunteers/Places/PlacesNameId",
                        "returnFormat": "json"
                      },
                      "transforms": [
                        {
                          "code": "\toptions \u003d []\n\tfor place in value:\n\t\toptions.append({\u0027value\u0027:place[\u0027id\u0027], \u0027label\u0027:place[\u0027name\u0027]})\n\treturn options",
                          "type": "script"
                        }
                      ],
                      "type": "query"
                    }
                  }
                },
                "props": {
                  "params": {
                    "SelectedValue": null,
                    "Text": "Place"
                  },
                  "path": "Volunteers/Registration/Cards/SelectionInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainer Right"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "props": {
              "direction": "column",
              "style": {
                "paddingLeft": "15px",
                "paddingRight": "30px"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "FlexContainer Personal"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "style": {
            "borderBottomColor": "#e6e6e6",
            "borderBottomStyle": "solid",
            "borderBottomWidth": 1,
            "paddingBottom": "5px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "startDate"
                },
                "propConfig": {
                  "custom.dateOnly": {
                    "binding": {
                      "config": {
                        "path": "this.props.params.date"
                      },
                      "transforms": [
                        {
                          "code": "\treturn system.date.format(value, \"h/d/YYYY\")",
                          "type": "script"
                        }
                      ],
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "date": {
                      "$": [
                        "ts",
                        192,
                        1622211097021
                      ],
                      "$ts": 1622211096311
                    },
                    "inputText": "",
                    "text": "Start Date*"
                  },
                  "path": "Volunteers/Registration/Cards/DateInput",
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainer Left"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "props": {
              "direction": "column",
              "style": {
                "paddingLeft": "25px",
                "paddingRight": "20px"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "endDate"
                },
                "props": {
                  "params": {
                    "date": {
                      "$": [
                        "ts",
                        192,
                        1622211097028
                      ],
                      "$ts": 1622211096311
                    },
                    "inputText": "",
                    "text": "End Date*"
                  },
                  "path": "Volunteers/Registration/Cards/DateInput",
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainer Right"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "props": {
              "direction": "column",
              "style": {
                "paddingLeft": "15px",
                "paddingRight": "30px"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "FlexContainerDate"
        },
        "props": {
          "style": {
            "borderBottomColor": "#e6e6e6",
            "borderBottomStyle": "solid",
            "borderBottomWidth": 1,
            "paddingBottom": "5px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "days"
                },
                "position": {
                  "basis": "100%",
                  "grow": 1
                },
                "propConfig": {
                  "custom.days": {
                    "binding": {
                      "config": {
                        "path": "this.props.params.selectedValue"
                      },
                      "transforms": [
                        {
                          "code": "\tif value is None:\n\t\treturn 0\n\treturn sum(value)",
                          "type": "script"
                        }
                      ],
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "options": [
                      {
                        "label": "Monday",
                        "value": 1
                      },
                      {
                        "label": "Tuesday",
                        "value": 2
                      },
                      {
                        "label": "Wednesday",
                        "value": 4
                      },
                      {
                        "label": "Thursday",
                        "value": 8
                      },
                      {
                        "label": "Friday",
                        "value": 16
                      },
                      {
                        "label": "Saturday",
                        "value": 32
                      },
                      {
                        "label": "Sunday",
                        "value": 64
                      }
                    ],
                    "selectedValue": null,
                    "text": "Days of the Week"
                  },
                  "path": "Volunteers/Registration/Cards/MultiSelectionInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainerMain"
            },
            "position": {
              "basis": "100px",
              "grow": 1
            },
            "props": {
              "direction": "column",
              "style": {
                "paddingLeft": "25px",
                "paddingRight": "20px"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "FlexContainerDOW"
        },
        "position": {
          "basis": "100px"
        },
        "props": {
          "style": {
            "borderBottomColor": "#e6e6e6",
            "borderBottomStyle": "solid",
            "borderBottomWidth": 1,
            "paddingBottom": "20px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "EmbeddedView"
            },
            "position": {
              "basis": "50%"
            },
            "propConfig": {
              "props.params.add": {
                "onChange": {
                  "enabled": null,
                  "script": "\tif currentValue.value:\n\t\tpayload \u003d {\n\t\t\t\u0027start\u0027: self.props.params.start,\n\t\t\t\u0027end\u0027: self.props.params.end\n\t\t}\n\t\tsystem.perspective.sendMessage(\"add-time-assignment-register\", payload\u003dpayload, scope\u003d\"page\")\n\t\tself.props.params.add \u003d False"
                }
              }
            },
            "props": {
              "params": {
                "add": false,
                "end": "12:00 PM",
                "start": "12:00 PM"
              },
              "path": "Volunteers/Registration/Cards/TimeCreateRow (1)",
              "style": {
                "paddingLeft": "25px"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "FlexRepeater"
            },
            "position": {
              "basis": "50%"
            },
            "propConfig": {
              "props.instances": {
                "binding": {
                  "config": {
                    "path": "/root.custom.times"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "direction": "column",
              "path": "Volunteers/Registration/Cards/timeInputRow (1)",
              "style": {
                "paddingRight": "25px"
              }
            },
            "type": "ia.display.flex-repeater"
          }
        ],
        "meta": {
          "name": "FlexContainerTime"
        },
        "position": {
          "basis": "150px"
        },
        "props": {
          "style": {
            "borderBottomColor": "#e6e6e6",
            "borderBottomStyle": "solid",
            "borderBottomWidth": 1,
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "TaskAdd"
            },
            "position": {
              "basis": "100px"
            },
            "propConfig": {
              "props.params.add": {
                "onChange": {
                  "enabled": null,
                  "script": "\tif currentValue.value:\n\t\tpayload \u003d {\n\t\t\t\u0027name\u0027: self.props.params.name,\n\t\t\t\u0027description\u0027: self.props.params.description,\n\t\t\t\u0027gender\u0027: self.props.params.gender,\n\t\t\t\u0027ageMax\u0027: self.props.params.ageMax,\n\t\t\t\u0027ageMin\u0027: self.props.params.ageMin,\n\t\t}\n\t\tsystem.perspective.sendMessage(\"add-task-assignment-register\", payload\u003dpayload, scope\u003d\"page\")\n\t\tself.props.params.add \u003d False\n\t\tself.props.params.name \u003d \u0027\u0027\n\t\tself.props.params.description \u003d \u0027\u0027\n\t\tself.props.params.gender \u003d None\n\t\tself.props.params.ageMax \u003d None\n\t\tself.props.params.ageMin \u003d None\n\t\t"
                }
              }
            },
            "props": {
              "params": {
                "add": false,
                "ageMax": "",
                "ageMin": "",
                "description": "",
                "gender": null,
                "name": "",
                "note": ""
              },
              "path": "Volunteers/Registration/Cards/TaskCreate",
              "style": {
                "borderBottomStyle": "none",
                "borderLeftStyle": "none",
                "borderRightStyle": "solid",
                "borderTopStyle": "none",
                "marginBottom": "10px"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "FlexRepeater"
            },
            "propConfig": {
              "props.instances": {
                "binding": {
                  "config": {
                    "path": "/root.custom.tasks"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "direction": "column",
              "path": "Volunteers/Registration/Cards/TaskRow"
            },
            "type": "ia.display.flex-repeater"
          }
        ],
        "meta": {
          "name": "FlexContainerTasks"
        },
        "position": {
          "basis": "200px",
          "grow": 1
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "#\timport traceback\n#\ttry:\n#\t\tsystem.perspective.sendMessage(\"ResetSearch\", payload\u003d{}, scope\u003d\"session\")\n#\t\tsystem.perspective.sendMessage(\"ResetRegistration\", payload\u003d{}, scope\u003d\"session\")\n#\texcept:\n#\t\tlogger \u003d system.util.getLogger(\"Participants RegisterParticipantSearch Button Clear\")\n#\t\tmsg \u003d traceback.format_exc()\n#\t\tlogger.error(msg)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Button Clear"
            },
            "position": {
              "basis": "120px"
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "15px",
                "marginLeft": "20px",
                "marginRight": "20px",
                "marginTop": "15px"
              },
              "text": "Clear"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\tlogger \u003d system.util.getLogger(\"Activity Button Create\")\n\ttry:\n#\tGet the parameters from the input boxes\n\t\tname \u003d self.parent.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"Name\").props.params.inputText\n\t\tdescription \u003d self.parent.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"Descritption\").props.params.inputText\n\t\ttasks \u003d self.view.getChild(\"root\").custom.tasks\n\t\tdateStart \u003d self.parent.parent.getChild(\"FlexContainerDate\").getChild(\"FlexContainer Left\").getChild(\"startDate\").props.params.date\n\t\tdateEnd \u003d self.parent.parent.getChild(\"FlexContainerDate\").getChild(\"FlexContainer Right\").getChild(\"endDate\").props.params.date\n\t\ttimes \u003d self.view.getChild(\"root\").custom.times\n\t\tdays \u003d self.parent.parent.getChild(\"FlexContainerDOW\").getChild(\"FlexContainerMain\").getChild(\"days\").custom.days\n\t\tplace \u003d self.parent.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Right\").getChild(\"place\").props.params.SelectedValue\n\t\tfacilitator \u003d self.parent.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Right\").getChild(\"facilitator\").props.params.SelectedValue\n\t\tif name !\u003d \u0027\u0027 and len(tasks) \u003e 0:\n\t\t\tif not description:\n\t\t\t\tdescription \u003d \"\"\n\t\t\tactivity \u003d {\n\t\t\t\t\u0027name\u0027: name,\n\t\t\t\t\u0027description\u0027: description,\n\t\t\t\t\u0027tasks\u0027: tasks,\n\t\t\t\t\u0027dateStart\u0027: dateStart,\n\t\t\t\t\u0027dateEnd\u0027: dateEnd,\n\t\t\t\t\u0027times\u0027 : times,\n\t\t\t\t\u0027days\u0027: days,\n\t\t\t\t\u0027place\u0027: place,\n\t\t\t\t\u0027facilitator\u0027: facilitator\n\t\t\t}\n\t\t\tassignments.createAssignments(activity)\n\t\t\tsystem.perspective.closeDock(\"RegisterAssignment\")\n\t\t\tsystem.perspective.sendMessage(\"refreshAssignmentsTable\", scope\u003d\"session\")\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(\"Group Name is a required field to add a new Group.\")\n\texcept:\n\t\t\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Button Create"
            },
            "position": {
              "basis": "120px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": ".../FlexContainer Personal/FlexContainer Left/Name.props.params.inputText"
                  },
                  "transforms": [
                    {
                      "code": "\tif value:\n\t\treturn True\n\telse:\n\t\treturn False",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "15px",
                "marginLeft": "20px",
                "marginRight": "20px",
                "marginTop": "15px"
              },
              "text": "Create"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Group Name is a required field to add a new Group."
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\t#system.perspective.print(message)\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "65px",
          "shrink": 0
        },
        "type": "ia.container.flex"
      }
    ],
    "custom": {
      "tasks": [],
      "times": []
    },
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "custom.tasks": {
        "persistent": true
      }
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "add-task-assignment-register",
          "pageScope": true,
          "script": "\t# payload \u003d {\u0027name\u0027: \u0027XXXXXX\u0027, \u0027description\u0027: \u0027XXXXXXXXX\u0027}\n\tif len(self.custom.tasks) \u003e 0:\n\t\tpayload[\u0027id\u0027] \u003d max(x[\u0027id\u0027] for x in self.custom.tasks) + 1\n\telse:\n\t\tpayload[\u0027id\u0027] \u003d 0\n\tself.custom.tasks.append(payload)\n#\tself.getChild(\"FlexContainerTasks\").getChild(\"TaskAdd\").props.params.ageMax \u003d None\n#\tself.getChild(\"FlexContainerTasks\").getChild(\"TaskAdd\").props.params.ageMin \u003d None\n#\tself.getChild(\"FlexContainerTasks\").getChild(\"TaskAdd\").props.params.gender \u003d None",
          "sessionScope": false,
          "viewScope": false
        },
        {
          "messageType": "add-time-assignment-register",
          "pageScope": true,
          "script": "\t# payload \u003d {\u0027name\u0027: \u0027XXXXXX\u0027, \u0027description\u0027: \u0027XXXXXXXXX\u0027}\n\tif len(self.custom.times) \u003e 0:\n\t\tpayload[\u0027id\u0027] \u003d max(x[\u0027id\u0027] for x in self.custom.times) + 1\n\telse:\n\t\tpayload[\u0027id\u0027] \u003d 0\n\tself.custom.times.append(payload)",
          "sessionScope": false,
          "viewScope": false
        },
        {
          "messageType": "remove-task-assignment-register",
          "pageScope": true,
          "script": "\tself.custom.tasks \u003d [x for x in self.custom.tasks if x[\u0027id\u0027] !\u003d payload[\u0027id\u0027]]\n\t# implement your handler here",
          "sessionScope": false,
          "viewScope": false
        },
        {
          "messageType": "remove-time-assignment-register",
          "pageScope": true,
          "script": "\tself.custom.times \u003d [x for x in self.custom.times if x[\u0027id\u0027] !\u003d payload[\u0027id\u0027]]\n\t# implement your handler here",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}