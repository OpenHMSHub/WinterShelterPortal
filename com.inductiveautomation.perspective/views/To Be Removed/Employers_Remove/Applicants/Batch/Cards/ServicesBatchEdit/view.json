{
  "custom": {
    "edit_data": {
      "HMIS": 0,
      "comment": "",
      "employee_id": -1,
      "enrollment_id": -1,
      "quantity": 4,
      "search_selection": [],
      "selected_id": -1,
      "selected_id_list": [],
      "selected_participants": [],
      "service_id": -1,
      "time_created": {
        "$": [
          "ts",
          192,
          1604512594406
        ],
        "$ts": 1604512594406
      }
    },
    "func_add_participant": false,
    "func_delete_participant": -1
  },
  "params": {},
  "propConfig": {
    "custom.edit_data": {
      "persistent": true
    },
    "custom.edit_data[0].id": {
      "binding": {
        "config": {
          "path": "view.params.drugscreenlogid"
        },
        "type": "property"
      }
    },
    "custom.func_add_participant": {
      "onChange": {
        "enabled": null,
        "script": "\timport traceback\n\ttry:\n\t\tif currentValue.value:\n\t\t\t#system.perspective.print(currentValue)\n\t\t\tvalid \u003d True\n\t\t\t#Verify its gretaer then -1\n\t\t\tif self.custom.edit_data.selected_id \u003c 0:\n\t\t\t\tvalid \u003d False\n\t\t\t\tsystem.perspective.print(\u0027Participant ID not valid\u0027)\n\t\t\t#Verify the ID doesn\u0027t already exist in the list\n\t\t\tfor row in range(len(self.custom.edit_data.selected_id_list)):\n\t\t\t\tif self.custom.edit_data.selected_id_list[row] \u003d\u003d self.custom.edit_data.selected_id:\n\t\t\t\t\tvalid \u003d False\n\t\t\t\t\tsystem.perspective.print(\u0027Duplicate Participant ID\u0027)\n\t\t\tif valid:\t\t\n\t\t\t\tself.custom.edit_data.selected_id_list.append(self.custom.edit_data.selected_id)\n\t\t\t\tself.custom.edit_data.selected_participants.append(self.custom.edit_data.search_selection[0])\n\t\t\t#Reset the script trigger\n\t\t\tself.custom.func_add_participant \u003d False\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants Batch Services\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
      },
      "persistent": true
    },
    "custom.func_delete_participant": {
      "onChange": {
        "enabled": null,
        "script": "\timport traceback\n\ttry:\n\t\tif currentValue.value \u003e -1:\n\t\t\tsystem.perspective.print(\u0027Delete Participant\u0027)\n\t\t\tparticipant_id \u003d currentValue.value\n\t\t\tsystem.perspective.print(participant_id)\n\t\t\t#Remove the participant from the ID list\n\t\t\tfor row in range(len(self.custom.edit_data.selected_id_list)):\n\t\t\t\tif self.custom.edit_data.selected_id_list[row] \u003d\u003d participant_id:\n\t\t\t\t\tself.custom.edit_data.selected_id_list.pop(row)\n\t\t\t\t\t#Find the table row and delete from the table\n\t\t\t\t\tfor id_row in range(len(self.custom.edit_data.selected_participants)):\n\t\t\t\t\t\tif self.custom.edit_data.selected_participants[id_row].participant_id \u003d\u003d participant_id:\n\t\t\t\t\t\t\tself.custom.edit_data.selected_participants.pop(id_row)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\tbreak\n\t\t\t\t\tsystem.perspective.print(\u0027Participant removed from selection list\u0027)\n\t\t#Reset the value to -1\n\t\tself.custom.func_delete_participant \u003d -1\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants Batch Services\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
      },
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 629,
      "width": 1043
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "EmbeddedView Row1"
        },
        "position": {
          "basis": "80px"
        },
        "propConfig": {
          "props.params.HMIS": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.HMIS"
              },
              "type": "property"
            }
          },
          "props.params.comment": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.comment"
              },
              "type": "property"
            }
          },
          "props.params.employee_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.employee_id"
              },
              "type": "property"
            }
          },
          "props.params.enrollment_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.enrollment_id"
              },
              "type": "property"
            }
          },
          "props.params.quantity": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.quantity"
              },
              "type": "property"
            }
          },
          "props.params.service_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.service_id"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Services/Batch/Cards/Row1",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Label_1"
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "type": "ia.display.label"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t#system.perspective.print(\"New Batch Services Button Pressed\")\n\t#Reset all the data entry fields\n\tself.view.custom.edit_data.time_created \u003d system.date.now()\n\tself.view.custom.edit_data.employee_id \u003d -1\n\tself.view.custom.edit_data.enrollment_id \u003d -1\n\tself.view.custom.edit_data.service_id \u003d -1\n\tself.view.custom.edit_data.selected_id_list \u003d []\n\tself.view.custom.edit_data.selected_participants \u003d []\n\t#Send the message to refresh the table\n\tmessageType \u003d \u0027RefreshBatchServicesSearch\u0027\n\tsystem.perspective.sendMessage(messageType)\n\tmessageType \u003d \u0027ResetServicesSearch\u0027\n\tsystem.perspective.sendMessage(messageType)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_new"
            },
            "position": {
              "basis": "140px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginLeft": "20px",
                "marginTop": "5px"
              },
              "text": "new"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t\n\timport traceback\n\ttry:\n\t\tproject \u003d \"RITI\"\n\t\t### Declare parameters \n\t\ttime_created \u003d system.date.now()\n\t\tuser_name \u003d self.session.props.auth.user.userName\n\t\temployee_id \u003d self.view.custom.edit_data.employee_id\n\t\tenrollment_id \u003d self.view.custom.edit_data.enrollment_id\n\t\tservice_id \u003d self.view.custom.edit_data.service_id\n\t\tHMIS \u003d self.view.custom.edit_data.HMIS\n\t\tquantity \u003d self.view.custom.edit_data.quantity\n\t\tcomment \u003d self.view.custom.edit_data.comment\n\t\n\t\t## Check if parameters are filled in correctly \n\t\tif (time_created is None):\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\"Date Error\")\n\t\telif (employee_id is None) or (int(employee_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\"Employee ID Error\")\n\t\telif (enrollment_id is None) or (int(enrollment_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\"Enrollment ID Error\")\n\t\telif (service_id is None) or (int(service_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\"Service ID Error\")\n\t\telif (HMIS is None) or (int(HMIS) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\"HMIS Selection Error\")\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t\tsystem.perspective.print(\"Batch Services Data Valid\")\n\t\t\n\t\t### Check if data is valid otherwise show error message.\n\t\tif valid:\n\t\t\t#system.perspective.print(\"Insert New Batch Data\")\n\t\t\tpath \u003d \"Participants/Services/ServicesDetailInsert\"\n\t\t\tfor row in range(len(self.view.custom.edit_data.selected_id_list)):\n\t\t\t\t### Batch jobs only create new data\n\t\t\t\tparticipant_id \u003d self.view.custom.edit_data.selected_id_list[row]\n\t\t\t\tparameters \u003d {\"time_created\":time_created,\"participant_id\":participant_id,\n\t\t\t\t\t\t\"employee_id\":employee_id,\"enrollment_id\":enrollment_id,\n\t\t\t\t\t\t\"service_id\":service_id,\"user_name\":user_name,\n\t\t\t\t\t\t\"HMIS\":HMIS,\"quantity\":quantity,\n\t\t\t\t\t\t\"comment\":comment}\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\t\n\t\t\t\t#system.perspective.print(\"Insert data\")\n\t\t\t\t\n\t\t\t################################################\n\t\t\t# Increment Yearly Services\n\t\t\ttotal_services \u003d system.tag.readBlocking([\"[default]RITI/Participants/long_TotalServices\"])[0].value\n\t\t\ttotal_services +\u003d len(self.view.custom.edit_data.selected_id_list)\n\t\t\tsystem.tag.writeBlocking([\"[default]RITI/Participants/long_TotalServices\"], [total_services])\n\t\t\t\n\t\t\t##### Refresh the table\n\t\t\tif Refresh:\n\t\t\t\tsystem.perspective.print(\"Batch Services Query Success\")\n\t\t\t\t#Reset all the data entry fields\n\t\t\t\tself.view.custom.edit_data.time_created \u003d system.date.now()\n\t\t\t\tself.view.custom.edit_data.employee_id \u003d -1\n\t\t\t\tself.view.custom.edit_data.enrollment_id \u003d -1\n\t\t\t\tself.view.custom.edit_data.service_id \u003d -1\n\t\t\t\tself.view.custom.edit_data.selected_id_list \u003d []\n\t\t\t\tself.view.custom.edit_data.selected_participants \u003d []\n\t\t\t\t#Send the message to refresh the table\n\t\t\t\tmessageType \u003d \u0027RefreshBatchServicesSearch\u0027\n\t\t\t\tsystem.perspective.sendMessage(messageType)\n\t\t\t\tmessageType \u003d \u0027ResetServicesSearch\u0027\n\t\t\t\tsystem.perspective.sendMessage(messageType)\n\t\t\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(\"Please fill in all the fields correctly before saving.\")\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants Batch Services\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_save"
            },
            "position": {
              "basis": "140px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "Save"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Please fill in all the fields correctly before saving."
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "messageHandlers": []
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "50px"
        },
        "props": {
          "style": {
            "borderTopColor": "#9db8d1",
            "borderTopStyle": "solid",
            "borderTopWidth": "1px",
            "classes": "Background/Default",
            "marginTop": "5px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\u0027Employee:\u0027 +\r\n{view.custom.edit_data.employee_id} +\r\n\u0027, Enrollment:\u0027 +\r\n{view.custom.edit_data.enrollment_id} + \r\n\u0027, Service:\u0027 +\r\n{view.custom.edit_data.service_id} + \r\n\u0027, Selected_ID:\u0027 +\r\n{view.custom.edit_data.selected_id} + \r\n\u0027, Add Function:\u0027 +\r\n{view.custom.func_add_participant}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_0"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.search_selection"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_1"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.selected_id_list"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_2"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.selected_participants"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "EmbeddedView Row2"
        },
        "position": {
          "basis": "200px",
          "grow": 1
        },
        "propConfig": {
          "props.params.func_add_participant": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.func_add_participant"
              },
              "type": "property"
            }
          },
          "props.params.func_delete_participant": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.func_delete_participant"
              },
              "type": "property"
            }
          },
          "props.params.search_selection": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.search_selection"
              },
              "type": "property"
            }
          },
          "props.params.selected_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.selected_id"
              },
              "type": "property"
            }
          },
          "props.params.selected_participants": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.selected_participants"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Services/Batch/Cards/Row2",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "type": "ia.container.flex"
  }
}