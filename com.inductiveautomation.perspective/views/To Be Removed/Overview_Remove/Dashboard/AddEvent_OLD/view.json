{
  "custom": {
    "key": {
      "endDate": "value",
      "startDate": "value"
    }
  },
  "params": {
    "eventId": "value",
    "isUpdateEvent": false
  },
  "propConfig": {
    "custom.key": {
      "persistent": true
    },
    "params.eventId": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.isUpdateEvent": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 1673,
      "width": 600
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "EmbeddedView"
        },
        "position": {
          "basis": "62px"
        },
        "props": {
          "path": "Overview/Dashboard/AddEventHeader",
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "meta": {
              "name": "EventCategory"
            },
            "position": {
              "basis": "150px"
            },
            "props": {
              "params": {
                "Category": "Faith Meetings"
              },
              "path": "Overview/Dashboard/CategoryInput",
              "style": {
                "marginTop": "0px"
              },
              "useDefaultViewHeight": true
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Subcategory"
            },
            "position": {
              "basis": "100px",
              "grow": 1
            },
            "props": {
              "params": {
                "Subcategory": "Personality Test"
              },
              "path": "Overview/Dashboard/SubcategoryInput"
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "FlexContainer Event Categories"
        },
        "position": {
          "basis": "200px"
        },
        "props": {
          "direction": "column",
          "style": {
            "borderBottomColor": "#e6e6e6",
            "borderBottomStyle": "solid",
            "borderBottomWidth": 1,
            "paddingBottom": "10px",
            "paddingLeft": "10px",
            "paddingRight": "10px",
            "paddingTop": "10px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Title"
            },
            "position": {
              "basis": "160px"
            },
            "props": {
              "params": {
                "inputText": "",
                "text": "Title*"
              },
              "path": "Overview/Dashboard/TextInput"
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Description"
            },
            "position": {
              "basis": "320px"
            },
            "props": {
              "params": {
                "inputText": "",
                "text": "Description"
              },
              "path": "Overview/Dashboard/TextInput"
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "FlexContainer Event Title"
        },
        "position": {
          "basis": "158px"
        },
        "props": {
          "direction": "column",
          "style": {
            "borderBottomColor": "#e6e6e6",
            "borderBottomStyle": "solid",
            "borderBottomWidth": 1,
            "paddingBottom": "10px",
            "paddingLeft": "10px",
            "paddingRight": "10px",
            "paddingTop": "10px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Audience"
            },
            "position": {
              "basis": "50px",
              "shrink": 0
            },
            "props": {
              "params": {
                "Men": false,
                "Minors": false,
                "Participants": false,
                "Staff": false,
                "Volunteers": false,
                "Women": false,
                "inputText": "",
                "text": "Audience"
              },
              "path": "Overview/Dashboard/AudienceInput",
              "style": {
                "marginBottom": "5px",
                "marginTop": "5px"
              }
            },
            "type": "ia.display.view"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Venue"
                },
                "position": {
                  "basis": "320px"
                },
                "props": {
                  "params": {
                    "inputText": "",
                    "text": "Venue*"
                  },
                  "path": "Overview/Dashboard/TextInput",
                  "style": {
                    "marginRight": "20px"
                  }
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Room"
                },
                "position": {
                  "basis": "320px"
                },
                "props": {
                  "params": {
                    "inputText": "",
                    "text": "Room*"
                  },
                  "path": "Overview/Dashboard/TextInput",
                  "style": {
                    "marginLeft": "20px"
                  }
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainer Location"
            },
            "position": {
              "basis": "50px",
              "shrink": 0
            },
            "props": {
              "style": {
                "marginBottom": "5px",
                "marginTop": "5px"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "meta": {
              "name": "Facilitators"
            },
            "position": {
              "shrink": 0
            },
            "propConfig": {
              "position.basis": {
                "binding": {
                  "config": {
                    "path": "this.props.params.items"
                  },
                  "transforms": [
                    {
                      "code": "\treturn str(60 + ( 30 * len(value) )) + \"px\"",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "items": [],
                "text": "Facilitators"
              },
              "path": "Overview/Dashboard/TextRepeat",
              "style": {
                "marginBottom": "5px",
                "marginTop": "5px"
              }
            },
            "type": "ia.display.view"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "VolunteersNeeded"
                },
                "position": {
                  "basis": "320px"
                },
                "props": {
                  "params": {
                    "inputValue": 2,
                    "subTitle": "Total Needed",
                    "title": "Volunteers*"
                  },
                  "path": "Overview/Dashboard/WholeNumberInput"
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "StaffNeeded"
                },
                "position": {
                  "basis": "320px"
                },
                "props": {
                  "params": {
                    "inputValue": 2,
                    "subTitle": "Total Needed",
                    "title": "Staff*"
                  },
                  "path": "Overview/Dashboard/WholeNumberInput"
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainer_Volunteers_Staff"
            },
            "position": {
              "basis": "80px",
              "shrink": 0
            },
            "props": {
              "style": {
                "marginBottom": "5px",
                "marginTop": "5px"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Volunteers"
                },
                "propConfig": {
                  "position.basis": {
                    "binding": {
                      "config": {
                        "path": "this.props.params.items"
                      },
                      "transforms": [
                        {
                          "code": "\treturn str(300 + ( 100 * len(value) )) + \"px\"",
                          "type": "script"
                        }
                      ],
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "items": [],
                    "text": ""
                  },
                  "path": "Overview/Dashboard/TextRepeat"
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Staff"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "position.basis": {
                    "binding": {
                      "config": {
                        "path": "this.props.params.items"
                      },
                      "transforms": [
                        {
                          "code": "\treturn str(300 + ( 100 * len(value) )) + \"px\"",
                          "type": "script"
                        }
                      ],
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "items": [],
                    "text": ""
                  },
                  "path": "Overview/Dashboard/TextRepeat"
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainer_Volunteers_Staff_Assigned"
            },
            "position": {
              "basis": "60px",
              "shrink": 0
            },
            "propConfig": {
              "custom.staffAssignedNum": {
                "binding": {
                  "config": {
                    "path": "./Staff.props.params.items"
                  },
                  "transforms": [
                    {
                      "code": "\treturn len(value)",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              },
              "custom.volunteersAssignedNum": {
                "binding": {
                  "config": {
                    "path": "./Volunteers.props.params.items"
                  },
                  "transforms": [
                    {
                      "code": "\treturn len(value)",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "marginBottom": "5px",
                "marginTop": "5px"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "FlexContainer Event Details"
        },
        "position": {
          "basis": "400px"
        },
        "props": {
          "direction": "column",
          "style": {
            "borderBottomColor": "#e6e6e6",
            "borderBottomStyle": "solid",
            "borderBottomWidth": 1,
            "overflow": "visible",
            "paddingBottom": "10px",
            "paddingLeft": "10px",
            "paddingRight": "10px",
            "paddingTop": "10px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "RepeatType"
            },
            "position": {
              "basis": "120px"
            },
            "props": {
              "params": {
                "SelectedValue": "once",
                "interval": 1
              },
              "path": "Overview/Dashboard/FreqSelector",
              "style": {
                "marginTop": "5px"
              },
              "useDefaultViewHeight": true
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "DaysOfWeek"
            },
            "position": {
              "basis": "320px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "../RepeatType.props.params.SelectedValue"
                  },
                  "transforms": [
                    {
                      "fallback": false,
                      "inputType": "scalar",
                      "mappings": [
                        {
                          "input": "weekly",
                          "output": true
                        }
                      ],
                      "outputType": "scalar",
                      "type": "map"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "Friday": false,
                "Monday": false,
                "Saturday": false,
                "Sunday": false,
                "Thursday": false,
                "Tuesday": false,
                "Wednesday": false,
                "text": "Every..."
              },
              "path": "Overview/Dashboard/DaysOfWeekInput",
              "style": {
                "marginTop": "5px"
              },
              "useDefaultViewHeight": true
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "YearlyRepeatInput"
            },
            "position": {
              "basis": "320px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "../RepeatType.props.params.SelectedValue"
                  },
                  "transforms": [
                    {
                      "fallback": false,
                      "inputType": "scalar",
                      "mappings": [
                        {
                          "input": "yearly",
                          "output": true
                        }
                      ],
                      "outputType": "scalar",
                      "type": "map"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "bymonthday": 1,
                "bysetpos": 1,
                "byweekday": [
                  "mo",
                  "tu",
                  "we",
                  "th",
                  "fr"
                ],
                "repeatType": "yearlydate",
                "yearlyDate_bymonth": 1,
                "yearlyDay_bymonth": 9
              },
              "path": "Overview/Dashboard/YearlyRepeatInput",
              "style": {
                "marginTop": "5px"
              },
              "useDefaultViewHeight": true
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "MonthlyRepeatInput"
            },
            "position": {
              "basis": "320px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "../RepeatType.props.params.SelectedValue"
                  },
                  "transforms": [
                    {
                      "fallback": false,
                      "inputType": "scalar",
                      "mappings": [
                        {
                          "input": "monthly",
                          "output": true
                        }
                      ],
                      "outputType": "scalar",
                      "type": "map"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "bymonthday": 5,
                "bysetpos": -1,
                "byweekday": [
                  "sa",
                  "su"
                ],
                "repeatType": "monthlyday"
              },
              "path": "Overview/Dashboard/MonthlyRepeatInput",
              "style": {
                "marginTop": "5px"
              },
              "useDefaultViewHeight": true
            },
            "type": "ia.display.view"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "StartDate"
                },
                "position": {
                  "basis": "320px"
                },
                "propConfig": {
                  "props.params.inputDate": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.isUpdateEvent}, {view.custom.key.startDate}, now(0))"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Start Date"
                  },
                  "path": "Overview/Dashboard/DateInput"
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "EndDate"
                },
                "position": {
                  "basis": "320px"
                },
                "props": {
                  "params": {
                    "inputDate": {
                      "$": [
                        "ts",
                        201,
                        1607803004704
                      ],
                      "$ts": 1608742800000
                    },
                    "text": "End Date"
                  },
                  "path": "Overview/Dashboard/DateInput"
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "DateRange"
            },
            "position": {
              "basis": "100px"
            },
            "type": "ia.container.flex"
          },
          {
            "meta": {
              "name": "TimeRange"
            },
            "position": {
              "basis": "320px"
            },
            "props": {
              "params": {
                "endTime": {
                  "$": [
                    "ts",
                    201,
                    1607804085144
                  ],
                  "$ts": 1607799617832
                },
                "startTime": {
                  "$": [
                    "ts",
                    201,
                    1611415752992
                  ],
                  "$ts": 1607803637832
                },
                "text": "Time"
              },
              "path": "Overview/Dashboard/TimeRangeInput",
              "style": {
                "marginTop": "5px"
              },
              "useDefaultViewHeight": true
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "FlexContainer Event Time"
        },
        "position": {
          "basis": "478px"
        },
        "props": {
          "direction": "column",
          "style": {
            "borderBottomColor": "#e6e6e6",
            "borderBottomStyle": "solid",
            "borderBottomWidth": 1,
            "paddingBottom": "10px",
            "paddingLeft": "10px",
            "paddingRight": "10px",
            "paddingTop": "10px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": [
                  {
                    "config": {
                      "script": "\t\t\n\t#define variables that will be used for the start and end dateTime\n\tstartTime \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"TimeRange\").props.params.startTime\n\tstartHour \u003d system.date.getHour24(startTime)\n\tstartMinute \u003d system.date.getMinute(startTime)\n\tstartSecond \u003d system.date.getSecond(startTime)\n\tstartDate \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"DateRange\").getChild(\"StartDate\").props.params.inputDate\n\tstartYear \u003d system.date.getYear(startDate)\n\tstartMonth \u003d system.date.getMonth(startDate)\n\tendTime \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"TimeRange\").props.params.endTime\n\tendHour \u003d system.date.getHour24(endTime)\n\tendMinute \u003d system.date.getMinute(endTime)\n\tendSecond \u003d system.date.getSecond(endTime)\n\tendDate \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"DateRange\").getChild(\"EndDate\").props.params.inputDate\n\t\n\t#Initialize all of the event params\n\teventParams \u003d {\n\t\"allDay\": False,\n\t\"audienceMen\": self.parent.parent.getChild(\"FlexContainer Event Details\").getChild(\"Audience\").props.params.Men,\n\t\"audienceMinors\": self.parent.parent.getChild(\"FlexContainer Event Details\").getChild(\"Audience\").props.params.Minors,\n\t\"audienceParticipants\": self.parent.parent.getChild(\"FlexContainer Event Details\").getChild(\"Audience\").props.params.Participants,\n\t\"audienceStaff\": self.parent.parent.getChild(\"FlexContainer Event Details\").getChild(\"Audience\").props.params.Staff,\n\t\"audienceVolunteers\": self.parent.parent.getChild(\"FlexContainer Event Details\").getChild(\"Audience\").props.params.Volunteers,\n\t\"audienceWomen\": self.parent.parent.getChild(\"FlexContainer Event Details\").getChild(\"Audience\").props.params.Women,\n\t\"category\": self.parent.parent.getChild(\"FlexContainer Event Categories\").getChild(\"EventCategory\").props.params.Category,\n\t\"description\": self.parent.parent.getChild(\"FlexContainer Event Title\").getChild(\"Description\").props.params.inputText,\n\t\"room\": self.parent.parent.getChild(\"FlexContainer Event Details\").getChild(\"FlexContainer Location\").getChild(\"Room\").props.params.inputText,\n\t\"staffNeeded\": self.parent.parent.getChild(\"FlexContainer Event Details\").getChild(\"FlexContainer_Volunteers_Staff\").getChild(\"StaffNeeded\").props.params.inputValue,\n\t\"subCategory\": self.parent.parent.getChild(\"FlexContainer Event Categories\").getChild(\"Subcategory\").props.params.Subcategory,\n\t\"title\": self.parent.parent.getChild(\"FlexContainer Event Title\").getChild(\"Title\").props.params.inputText,\n\t\"venue\": self.parent.parent.getChild(\"FlexContainer Event Details\").getChild(\"FlexContainer Location\").getChild(\"Venue\").props.params.inputText,\n\t\"volunteersNeeded\": self.parent.parent.getChild(\"FlexContainer Event Details\").getChild(\"FlexContainer_Volunteers_Staff\").getChild(\"VolunteersNeeded\").props.params.inputValue,\n\t\"interval\": self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"RepeatType\").props.params.interval,\n\t\"freq\": self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"RepeatType\").props.params.SelectedValue,\n\t\n\t#Initialize the start and end dateTimes using the input dates and times. These dates will be updated for monthly and yearly repeating events\n\t\"startDate\": system.date.setTime(startDate, startHour, startMinute, startSecond),\n\t\"endDate\": system.date.setTime(endDate, endHour, endMinute, endSecond),\n\t\n\t#initialize other variables to default values. These values will be updated for some repeating events\n\t\"monday\": False,\n\t\"tuesday\": False,\n\t\"wednesday\": False,\n\t\"thursday\": False,\n\t\"friday\": False,\n\t\"saturday\": False,\n\t\"sunday\": False,\n\t\"bymonth\": None,\n\t\"bysetpos\": None\n\t}\n\t\n\teventParams[\u0027repeat\u0027] \u003d True\n\tif eventParams[\u0027freq\u0027] \u003d\u003d \u0027once\u0027:\n\t\teventParams[\u0027repeat\u0027] \u003d False\n\t\n\t#weekly\n\tif eventParams[\u0027freq\u0027] \u003d\u003d \u0027weekly\u0027:\n\t\teventParams[\u0027monday\u0027] \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"DaysOfWeek\").props.params.Monday\n\t\teventParams[\u0027tuesday\u0027] \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"DaysOfWeek\").props.params.Tuesday\n\t\teventParams[\u0027wednesday\u0027] \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"DaysOfWeek\").props.params.Wednesday\n\t\teventParams[\u0027thursday\u0027] \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"DaysOfWeek\").props.params.Thursday\n\t\teventParams[\u0027friday\u0027] \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"DaysOfWeek\").props.params.Friday\n\t\teventParams[\u0027saturday\u0027] \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"DaysOfWeek\").props.params.Saturday\n\t\teventParams[\u0027sunday\u0027] \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"DaysOfWeek\").props.params.Sunday\n\t\n\t#monthly\n\telif eventParams[\u0027freq\u0027] \u003d\u003d \u0027monthly\u0027:\n\t\trepeatType \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"MonthlyRepeatInput\").props.params.repeatType\n\t\t\n\t\t#monthlydate\n\t\tif repeatType \u003d\u003d \u0027monthlydate\u0027:\n\t\t\t#Update the day of the START DATE they selected with the day they picked in the monthly section\n\t\t\tbymonthday \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"MonthlyRepeatInput\").props.params.bymonthday\n\t\t\teventParams[\u0027startDate\u0027] \u003d system.date.setTime(system.date.getDate(startYear, startMonth, bymonthday), startHour, startMinute, startSecond)\n\t\t\n\t\t#monthlyday\n\t\telif repeatType \u003d\u003d \u0027monthlyday\u0027:\n\t\t\tbyweekday \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"MonthlyRepeatInput\").props.params.byweekday\n\t\t\teventParams[\u0027monday\u0027] \u003d \u0027mo\u0027 in byweekday\n\t\t\teventParams[\u0027tuesday\u0027] \u003d \u0027tu\u0027 in byweekday\n\t\t\teventParams[\u0027wednesday\u0027] \u003d \u0027we\u0027 in byweekday\n\t\t\teventParams[\u0027thursday\u0027] \u003d \u0027th\u0027 in byweekday\n\t\t\teventParams[\u0027friday\u0027] \u003d \u0027fr\u0027 in byweekday\n\t\t\teventParams[\u0027saturday\u0027] \u003d \u0027sa\u0027 in byweekday\n\t\t\teventParams[\u0027sunday\u0027] \u003d \u0027su\u0027 in byweekday\n\t\t\teventParams[\u0027bysetpos\u0027] \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"MonthlyRepeatInput\").props.params.bysetpos\t\t\t\n\t\t\n\t#yearly\n\telif eventParams[\u0027freq\u0027] \u003d\u003d \u0027yearly\u0027:\n\t\trepeatType \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"YearlyRepeatInput\").props.params.repeatType\n\t\t\n\t\t#yearlydate\n\t\tif repeatType \u003d\u003d \u0027yearlydate\u0027:\n\t\t\t#Update the day of the START DATE they selected with the day they picked in the yearly section\n\t\t\tbymonthday \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"YearlyRepeatInput\").props.params.bymonthday\n\t\t\tbymonth \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"YearlyRepeatInput\").props.params.yearlyDate_bymonth\n\t\t\teventParams[\u0027startDate\u0027] \u003d system.date.setTime(system.date.getDate(startYear, bymonth - 1, bymonthday), startHour, startMinute, startSecond)\n\t\t\n\t\t#yearlyday\n\t\telif repeatType \u003d\u003d \u0027yearlyday\u0027:\n\t\t\tbyweekday \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"YearlyRepeatInput\").props.params.byweekday\n\t\t\teventParams[\u0027monday\u0027] \u003d \u0027mo\u0027 in byweekday\n\t\t\teventParams[\u0027tuesday\u0027] \u003d \u0027tu\u0027 in byweekday\n\t\t\teventParams[\u0027wednesday\u0027] \u003d \u0027we\u0027 in byweekday\n\t\t\teventParams[\u0027thursday\u0027] \u003d \u0027th\u0027 in byweekday\n\t\t\teventParams[\u0027friday\u0027] \u003d \u0027fr\u0027 in byweekday\n\t\t\teventParams[\u0027saturday\u0027] \u003d \u0027sa\u0027 in byweekday\n\t\t\teventParams[\u0027sunday\u0027] \u003d \u0027su\u0027 in byweekday\n\t\t\teventParams[\u0027bysetpos\u0027] \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"YearlyRepeatInput\").props.params.bysetpos\n\t\t\teventParams[\u0027bymonth\u0027] \u003d self.parent.parent.getChild(\"FlexContainer Event Time\").getChild(\"YearlyRepeatInput\").props.params.yearlyDay_bymonth\n\t\t\teventParams[\u0027startDate\u0027] \u003d system.date.setTime(system.date.getDate(startYear, startMonth, 1), startHour, startMinute, startSecond)\n\t\n\t\n\t#system.perspective.print(len(eventParams))\n\t#system.perspective.print(eventParams)\n\t\n\tsystem.db.runNamedQuery(\"Calendar/AddEvent\", eventParams)\n\tpayload \u003d None\n\tsystem.perspective.sendMessage(\u0027CreateCalendarEvent\u0027, payload, scope \u003d \u0027session\u0027)\n\t\n\t#system.db.runNamedQuery(\"Calendar/AddFacilitator\", {\"eventID\": eventID, \"facilitatorName\": facilitatorName})\n\t#system.db.runNamedQuery(\"Calendar/AddStaff\", {\"eventID\": eventID, \"staffName\": staffName})\n\t#system.db.runNamedQuery(\"Calendar/AddVolunteer\", {\"eventID\": eventID, \"volunteerName\": volunteerName})\"\"\""
                    },
                    "scope": "G",
                    "type": "script"
                  },
                  {
                    "config": {
                      "id": "AddEvent",
                      "type": "close"
                    },
                    "scope": "C",
                    "type": "dock"
                  }
                ]
              }
            },
            "meta": {
              "name": "Create_Btn"
            },
            "position": {
              "basis": "150px"
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginLeft": 40,
                "marginRight": 20
              },
              "text": "Create"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "id": "AddEvent",
                    "type": "close"
                  },
                  "scope": "C",
                  "type": "dock"
                }
              }
            },
            "meta": {
              "name": "Cancel_Btn"
            },
            "position": {
              "basis": "150px"
            },
            "props": {
              "style": {
                "classes": "Buttons/Btn_Orange_Smooth",
                "marginLeft": 20,
                "marginRight": 40
              },
              "text": "Cancel"
            },
            "type": "ia.input.button"
          }
        ],
        "meta": {
          "name": "FlexContainer Buttons"
        },
        "position": {
          "basis": "60px"
        },
        "props": {
          "alignContent": "center",
          "style": {
            "borderBottomColor": "#e6e6e6",
            "borderBottomStyle": "solid",
            "borderBottomWidth": 1,
            "paddingBottom": "20px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "type": "ia.container.flex"
  }
}