{
  "custom": {
    "logEntry": {
      "comment": "text",
      "dateBegin": 1628571600000,
      "dateEnd": {
        "$": [
          "ts",
          192,
          1649540636278
        ],
        "$ts": 1660107600000
      },
      "dateEntry": {
        "$": [
          "ts",
          192,
          1628977178107
        ],
        "$ts": 1628977178107
      },
      "duration": 365,
      "suspensionTypeId": 5
    }
  },
  "params": {
    "newLogEntry": false,
    "row_data": {
      "DurationRevised": 0,
      "dateBegin": 1628571600000,
      "dateEndRevised": 1628830800000,
      "durationText": "",
      "id": 170,
      "incidentDescription": "",
      "incidentLogID": -1,
      "participant_id": 8,
      "reinstateRequired": true,
      "suspensionActive": "",
      "suspensionTypeIdRevised": -1,
      "suspensionTypeName": ""
    }
  },
  "propConfig": {
    "custom.edit_data": {
      "persistent": true
    },
    "custom.func_add_log_entry": {
      "persistent": true
    },
    "custom.logEntry": {
      "persistent": true
    },
    "params.newLogEntry": {
      "paramDirection": "output",
      "persistent": true
    },
    "params.row_data": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.DurationRevised": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.dateBegin": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.dateEndRevised": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.durationText": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.incidentDescription": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.incidentLogID": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.participant_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.reinstatement_log": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.reinstatement_log[0]": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.reinstatement_log[0].comment": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.reinstatement_log[0].duration": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.reinstatement_log[0].row_num": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.reinstatement_log[0].suspension_type_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.reinstatement_log[0].time_begin": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.reinstatement_log[0].time_created": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.reinstatement_log[0].time_end": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.suspensionActive": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.suspensionTypeIdRevised": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.suspensionTypeName": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 569,
      "width": 1385
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "EmbeddedView Header"
        },
        "position": {
          "basis": "25px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.Text": {
            "binding": {
              "config": {
                "path": "view.params.row_data.id"
              },
              "transforms": [
                {
                  "expression": "if({value} \u003d -1,\u0027(Selection Suspension)\u0027,{view.params.row_data.suspensionTypeName} + \u0027 Suspension\u0027)",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Templates/Header"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row1"
        },
        "position": {
          "basis": "100px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "{view.params.row_data.id} \u003e -1"
              },
              "type": "expr"
            }
          },
          "props.params.incident_description": {
            "binding": {
              "config": {
                "path": "view.params.row_data.incidentDescription"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Reinstatement/Detail/Main/Edit/Row1",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row2"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "{view.params.row_data.id} \u003e -1"
              },
              "type": "expr"
            }
          },
          "props.params.dateBegin": {
            "binding": {
              "config": {
                "path": "view.params.row_data.dateBegin"
              },
              "type": "property"
            }
          },
          "props.params.dateEnd": {
            "binding": {
              "config": {
                "path": "view.params.row_data.dateEndRevised"
              },
              "type": "property"
            }
          },
          "props.params.durationText": {
            "binding": {
              "config": {
                "path": "view.params.row_data.durationText"
              },
              "type": "property"
            }
          },
          "props.params.reinstateRequired": {
            "binding": {
              "config": {
                "path": "view.params.row_data.reinstateRequired"
              },
              "transforms": [
                {
                  "code": "\tif value:\n\t\treturn \u0027Yes\u0027\n\telse:\n\t\treturn \u0027No\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.suspensionActive": {
            "binding": {
              "config": {
                "path": "view.params.row_data.suspensionActive"
              },
              "type": "property"
            }
          },
          "props.params.suspensionTypeName": {
            "binding": {
              "config": {
                "path": "view.params.row_data.suspensionTypeName"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Reinstatement/Detail/Main/Edit/Row2",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row3"
        },
        "position": {
          "basis": "30px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "{view.params.row_data.id} \u003e -1"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "path": "Participants/Reinstatement/Detail/Main/Edit/Row3",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Table"
        },
        "position": {
          "basis": "100%"
        },
        "propConfig": {
          "props.data": {
            "binding": {
              "config": {
                "parameters": {
                  "suspension_id": "{view.params.row_data.id}"
                },
                "queryPath": "Participants/Reinstatement/ReinstatementCommentsSelect"
              },
              "type": "query"
            }
          }
        },
        "props": {
          "cells": {
            "allowEditOn": "single-click",
            "style": {
              "classes": "Table/Cell_Detail"
            }
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "id",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "ID"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": 60
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "time_created",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Date"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 100
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "suspension_type_id",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Type Id"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": 100
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "suspension_type_name",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Suspension Type"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 155
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "duration",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Duration"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": 100
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "durationText",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Duration"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 100
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "dateBegin",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Begin Date"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 120
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "dateEnd",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "End Date"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 120
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "comment",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Comment"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 160
            }
          ],
          "pager": {
            "bottom": false,
            "initialOption": 5
          },
          "rows": {
            "highlight": {
              "color": "#CCFFFF",
              "enabled": false
            },
            "striped": {
              "color": {
                "even": "#8AFFFF"
              },
              "enabled": false
            }
          },
          "style": {
            "classes": "Background/Default",
            "marginLeft": "25px",
            "marginRight": "25px"
          }
        },
        "scripts": {
          "customMethods": [],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "refreshReinstatementDetail",
              "pageScope": true,
              "script": "\t### Refresh data\n\t#system.perspective.print(\"Refresh Reinstatement Detail\")\n\tself.refreshBinding(\"props.data\")\n\tself.props.selection.selectedRow \u003d None",
              "sessionScope": true,
              "viewScope": true
            }
          ]
        },
        "type": "ia.display.table"
      },
      {
        "meta": {
          "name": "EmbeddedView Row4a"
        },
        "position": {
          "basis": "30px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "{view.params.newLogEntry}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "path": "Participants/Reinstatement/Detail/Main/Edit/Row4a",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row4"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "{view.params.newLogEntry}"
              },
              "type": "expr"
            }
          },
          "props.params.comment": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.logEntry.comment"
              },
              "type": "property"
            }
          },
          "props.params.dateBegin": {
            "binding": {
              "config": {
                "path": "view.custom.logEntry.dateBegin"
              },
              "type": "property"
            }
          },
          "props.params.dateEnd": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.logEntry.dateEnd"
              },
              "type": "property"
            }
          },
          "props.params.duration": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.logEntry.duration"
              },
              "type": "property"
            }
          },
          "props.params.suspensionTypeId": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.logEntry.suspensionTypeId"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Reinstatement/Detail/Main/Edit/Row4",
          "style": {
            "marginLeft": "25px",
            "marginRight": "25px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\t#system.perspective.print(\u0027Add Reinstatement Log Entry\u0027)\n\t\t#null \u003d None\n\t\t#Set the initial varibles\n\t\tself.view.custom.logEntry.dateEntry \u003d system.date.now()\n\t\tself.view.custom.logEntry.suspensionTypeId \u003d self.view.params.row_data.suspensionTypeIdRevised\n\t\tself.view.custom.logEntry.duration \u003d self.view.params.row_data.DurationRevised\n\t\tself.view.custom.logEntry.dateBegin \u003d self.view.params.row_data.dateBegin\n\t\tself.view.custom.logEntry.comment \u003d \u0027\u0027\n\t\t#End date is sent as text or date depending on duration\n\t\t#duration \u003d self.view.params.row_data.DurationRevised\n\t\t#system.perspective.print(str(duration))\n\t\t#if duration !\u003d 0:\n\t\tself.view.custom.logEntry.dateEnd \u003d self.view.params.row_data.dateEndRevised\n\t\t#else:\n\t\t#\tdatestring \u003d str(type(self.view.params.row_data.dateEndRevised))\n\t\t#\tsystem.perspective.print(datestring)\n\t\t#Set the entry row visible\n\t\tself.view.params.newLogEntry \u003d True\n\n\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants ReinstatementDetailEdit New Log Entry Button\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_new"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "if({view.params.row_data.id} \u003d -1, False, if({view.params.newLogEntry},False,True))"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginLeft": "20px",
                "marginTop": "5px"
              },
              "text": "New Log Entry"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\tproject \u003d \"RITI\"\n\t\t### Declare parameters \n\t\tparticipantId \u003d self.view.params.row_data.participant_id\n\t\tsuspensionId \u003d self.view.params.row_data.id\n\t\tcomment \u003d self.view.custom.logEntry.comment\n\t\ttimeCreated \u003d system.date.now()\n\t\tuserName \u003d self.session.props.auth.user.userName\n\t\tsuspensionTypeId \u003d self.view.custom.logEntry.suspensionTypeId\n\t\tdateBegin \u003d self.view.custom.logEntry.dateBegin\n\t\tdateEnd \u003d self.view.custom.logEntry.dateEnd\n\t\tduration \u003d self.view.custom.logEntry.duration\n\t\t#\n\t\t### Check if data is valid otherwise show error message.\n\t\tif (participantId is None) or (int(participantId) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Participant ID Error\"\n\t\telif (suspensionId is None) or (int(suspensionId) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Suspension ID Error\"\n\t\telif (timeCreated is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Time Created Error\"\n\t\telif (dateBegin is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please select a Suspension Begin Date\"\n\t\telif (dateEnd is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please select a Suspension End Date\"\n\t\telif (duration is None) or (int(duration) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please select a Suspension Duration\"\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t#\n\t\t#\n\t\t#\n\t\tif valid:\n\t\t\t#system.perspective.print(\"Update Exisiting Data\")\n\t\t\t#Insert the suspension data\n\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementDetailSuspensionUpdate\"\n\t\t\tparameters \u003d {\"suspension_id\":suspensionId, \n\t\t\t\t\t\t\"duration\":duration,\n\t\t\t\t\t\t\"suspension_type_id\":suspensionTypeId,\n\t\t\t\t\t\t\"time_end\":dateEnd}\n\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\t\t\n\t\t\t#Insert the reinstatement log entry\n\t\t\t#system.perspective.print(\"Update Data\")\n\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementDetailInsert\"\n\t\t\tparameters \u003d {\"participant_id\":participantId,\"suspension_id\":suspensionId,\n\t\t\t\t\t\t\"comment\":comment,\"user_name\":userName,\n\t\t\t\t\t\t\"time_created\":timeCreated,\n\t\t\t\t\t\t\"duration\":duration,\n\t\t\t\t\t\t\"suspension_type_id\":suspensionTypeId,\n\t\t\t\t\t\t\"time_begin\":dateBegin,\n\t\t\t\t\t\t\"time_end\":dateEnd}\n\t\t\tcomment_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\n\t\t\tself.getSibling(\"Label\").showMessage(\"Reinstatment Log Updated\")\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"RefreshReinstatementDetail\", payload\u003d{}, scope\u003d\"session\")\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"RefreshReinstatementData\", payload\u003d{}, scope\u003d\"session\")\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshPersonalInformation\", payload\u003d{}, scope\u003d\"session\")\n\t\t\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(error_message)\n\n\t\tself.view.params.newLogEntry \u003d False\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants ReinstatementDetailEdit button_save\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_save"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{view.params.newLogEntry}"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "Save"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\t### Declare parameters\n\t\tproject \u003d \"RITI\" \n\t\tsuspension_id \u003d self.view.params.row_data.id\n\t\tincident_id \u003d self.view.params.row_data.incidentLogID\n\t\t\t\n\t\t## Check if parameters are filled in correctly \n\t\tif (suspension_id is None) or (int(suspension_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\"Suspension ID Error\")\n\t\telif (incident_id is None) or (int(incident_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\"Incident ID Error\")\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t\tsystem.perspective.print(\"Data Valid\")\n\t\t\t\n\t\t### Check if data is valid otherwise show error message.\n\t\tif valid:\n\t\t\t#Delete the Reinstatement Notes\n\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementDetailDeleteReinstatement\"\n\t\t\tparameters \u003d {\"suspension_id\":suspension_id}\n\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\t#Clear the bar participant flag on the incident\n\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementDetailClearBarParticipant\"\n\t\t\tparameters \u003d {\"incident_id\":incident_id}\n\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\t#Delete the Suspension\n\t\t\tpath \u003d \"Participants/Reinstatement/ReinstatementDetailDeleteSuspension\"\n\t\t\tparameters \u003d {\"suspension_id\":suspension_id}\n\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\t#Refresh the data\n\t\t\tsystem.perspective.print(\"Refresh Data\")\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"RefreshReinstatementData\", payload\u003d{}, scope\u003d\"session\")\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants ReinstatementDetailEdit button_delete\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\n\t\t\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_delete"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "if({view.params.row_data.id} \u003d -1, False, if({view.params.newLogEntry},False,True))"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "Delete Record"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\n\t\tself.view.params.newLogEntry \u003d False\n\n\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants ReinstatementDetailEdit New Log Cancel Button\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_cancel"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{view.params.newLogEntry}"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "Cancel"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Please fill in all the fields correctly before saving."
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\t### Declare parameters\n\t\tproject \u003d \"RITI\" \n\t\tparticipantId \u003d self.view.params.row_data.participant_id\n\t\tsuspensionId \u003d self.view.params.row_data.id\n\t\t\n\t\t## Check if parameters are filled in correctly \n\t\tif (participantId is None) or (int(participantId) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\"Participant ID Error\")\n\t\t\terror_message \u003d \"Participant ID Error\"\n\t\telif (suspensionId is None) or (int(suspensionId) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\"Suspension ID Error\")\n\t\t\terror_message \u003d \"Suspension ID Error\"\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t\tsystem.perspective.print(\"Data Valid\")\n\t\n\t\tif valid:\n\t\t\t#Get a count of all active suspensions\n\t\t\tpath \u003d \u0027Participants/Reinstatement/ManualReinstateFindSuspensions\u0027\n\t\t\tparameters \u003d {\"participantId\":participantId}\n\t\t\tcount \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t#Set the date on the selected suspension\n\t\t\tpath \u003d \"Participants/Reinstatement/ManualReinstateSetDate\"\n\t\t\tparameters \u003d {\"participantId\":participantId,\"suspensionId\":suspensionId}\n\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\t#If this is the last active suspension then reinstate the participant\n\t\t\tif count \u003e 1:\n\t\t\t\terror_message \u003d \u0027Multiple Suspensions Exist. Please Reinstate all suspensions\u0027\n\t\t\t\tself.getSibling(\"Label\").showMessage(error_message)\n\t\t\telse:\n\t\t\t\tpath \u003d \"Participants/Reinstatement/ManualReinstateParticipant\"\n\t\t\t\tparameters \u003d {\"participantId\":participantId}\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\tself.getSibling(\"Label\").showMessage(\"Participant Reinstated\")\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"RefreshReinstatementDetail\", payload\u003d{}, scope\u003d\"session\")\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"RefreshReinstatementData\", payload\u003d{}, scope\u003d\"session\")\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshPersonalInformation\", payload\u003d{}, scope\u003d\"session\")\n\t\telse:\n\t\t\t\n\t\t\tself.getSibling(\"Label\").showMessage(error_message)\n\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants ReinstatementDetailEdit button_reinstate\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\t\t\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_reinstate"
            },
            "position": {
              "basis": "120px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "if({view.params.row_data.suspensionActive} !\u003d 1, False, if({view.params.newLogEntry},False,True))"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginRight": "10px",
                "marginTop": "5px"
              },
              "text": "Reinstate"
            },
            "type": "ia.input.button"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "50px",
          "shrink": 0
        },
        "props": {
          "style": {
            "borderTopColor": "#9db8d1",
            "borderTopStyle": "solid",
            "borderTopWidth": "1px",
            "classes": "Background/Default",
            "marginTop": "5px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\u0027Type:\u0027 + {view.custom.logEntry.suspensionTypeId}\r\n+ \u0027, Duration:\u0027 + {view.custom.logEntry.duration}\r\n+ \u0027, Begin:\u0027 + {view.custom.logEntry.dateBegin}\r\n+ \u0027, End:\u0027 + {view.custom.logEntry.dateEnd}\r\n+ \u0027, Comment:\u0027 + {view.custom.logEntry.comment}\r\n+ \u0027, New Entry:\u0027 + {view.params.newLogEntry}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      }
    ],
    "events": {
      "system": {
        "onStartup": {
          "config": {
            "script": "\timport traceback\n\ttry:\n\n\t\tself.view.params.newLogEntry \u003d False\n\n\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants ReinstatementDetailEdit onStartup\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "type": "ia.container.flex"
  }
}