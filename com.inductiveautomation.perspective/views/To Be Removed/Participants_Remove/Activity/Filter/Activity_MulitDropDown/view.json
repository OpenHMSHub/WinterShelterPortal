{
  "custom": {},
  "params": {
    "clear": false,
    "options": [],
    "placeholder": "",
    "selection": null
  },
  "propConfig": {
    "params.clear": {
      "onChange": {
        "enabled": null,
        "script": "\tif self.params.clear:\n\t\tself.getChild(\"root\").getChild(\"Dropdown\").props.value \u003d None\n\tself.params.clear \u003d False"
      },
      "paramDirection": "inout",
      "persistent": true
    },
    "params.options": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.placeholder": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.selection": {
      "paramDirection": "inout",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 30,
      "width": 775
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Dropdown"
        },
        "position": {
          "basis": "220px",
          "grow": 1
        },
        "propConfig": {
          "props.options": {
            "binding": {
              "config": {
                "path": "view.params.options"
              },
              "type": "property"
            }
          },
          "props.placeholder.text": {
            "binding": {
              "config": {
                "path": "view.params.placeholder"
              },
              "type": "property"
            }
          },
          "props.style.classes": {
            "binding": {
              "config": {
                "path": "this.props.value"
              },
              "transforms": [
                {
                  "code": "\ttext \u003d \"Filter/Filter_Text_Default\"\n\tif value !\u003d None:\n\t\tif value !\u003d \"\" and value \u003e -1:\n\t\t\ttext \u003d \"Filter/Filter_Text_Orange\"\n\treturn text",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.value": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.params.selection"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "dropdownOptionStyle": {
            "classes": "Dropdowns/DD_Options"
          },
          "multiSelect": true,
          "placeholder": {
            "color": "#AAAAAA"
          },
          "search": {
            "enabled": false
          },
          "style": {},
          "wrapMultiSelectValues": false
        },
        "type": "ia.input.dropdown"
      }
    ],
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "props.style.classes": {
        "binding": {
          "config": {
            "path": "view.params.selection"
          },
          "transforms": [
            {
              "code": "\tborder \u003d \"Filter/Filter_Border_Default\"\n\tif value !\u003d None:\n\t\tif value !\u003d \"\" and value \u003e -1:\n\t\t\tborder \u003d \"Filter/Filter_Border_Orange\"\n\treturn border",
              "type": "script"
            }
          ],
          "type": "property"
        }
      }
    },
    "props": {
      "alignItems": "center",
      "style": {
        "overflow": "hidden"
      }
    },
    "type": "ia.container.flex"
  }
}