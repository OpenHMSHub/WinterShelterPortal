{
  "custom": {},
  "params": {
    "age_max": [],
    "age_min": [],
    "first_names": [],
    "shelters": []
  },
  "propConfig": {
    "params.age_max": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.age_min": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.first_names": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.shelters": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 30,
      "width": 1817
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "lblFilter"
        },
        "position": {
          "basis": "70px",
          "shrink": 0
        },
        "props": {
          "style": {
            "classes": "Filter/Header_Text"
          },
          "text": "Filters:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "FirstName"
        },
        "position": {
          "basis": "150px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "path": "view.params.first_names"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "FirstName",
            "placeholder": "First Name"
          },
          "path": "1_TEMPLATES/Filtering/Filters/DatasetFilter_Text",
          "style": {
            "classes": "Filter/Filter_Container"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "MiddleName"
        },
        "position": {
          "basis": "150px"
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "path": "view.params.first_names"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "MiddleName",
            "placeholder": "Middle Name"
          },
          "path": "1_TEMPLATES/Filtering/Filters/DatasetFilter_Text",
          "style": {
            "classes": "Filter/Filter_Container"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "LastName"
        },
        "position": {
          "basis": "150px"
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "path": "view.params.first_names"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "LastName",
            "placeholder": "Last Name"
          },
          "path": "1_TEMPLATES/Filtering/Filters/DatasetFilter_Text",
          "style": {
            "classes": "Filter/Filter_Container"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "NickName"
        },
        "position": {
          "basis": "150px",
          "display": false
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "path": "view.params.first_names"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "FirstName",
            "placeholder": "Nick Name"
          },
          "path": "1_TEMPLATES/Filtering/Filters/DatasetFilter_SingleDropDown",
          "style": {
            "classes": "Filter/Filter_Container"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "BirthDate"
        },
        "position": {
          "basis": "150px"
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "path": "view.params.first_names"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "BirthDate",
            "placeholder": "Birth Date"
          },
          "path": "1_TEMPLATES/Filtering/Filters/DatasetFilter_DateText",
          "style": {
            "classes": "Filter/Filter_Container"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "MinAge"
        },
        "position": {
          "basis": "150px"
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "path": "view.params.age_min"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "Age",
            "placeholder": "Min Age"
          },
          "path": "1_TEMPLATES/Filtering/Filters/DatasetFilter_LowerNumericBound",
          "style": {
            "classes": "Filter/Filter_Container"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "MaxAge"
        },
        "position": {
          "basis": "150px"
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "path": "view.params.age_max"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "Age",
            "placeholder": "Max Age"
          },
          "path": "1_TEMPLATES/Filtering/Filters/DatasetFilter_UpperNumericBound",
          "style": {
            "classes": "Filter/Filter_Container"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Shelter"
        },
        "position": {
          "basis": "150px"
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "path": "view.params.shelters"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "clear": false,
            "column_name": "Shelter",
            "placeholder": "Shelter"
          },
          "path": "1_TEMPLATES/Filtering/Filters/DatasetFilter_SingleDropDown",
          "style": {
            "classes": "Filter/Filter_Container"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Placeholder"
        },
        "position": {
          "basis": "1px",
          "grow": 1
        },
        "props": {
          "path": "1_TEMPLATES/Filtering/Filter_Placeholder"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "lblSearch"
        },
        "position": {
          "basis": "50px",
          "shrink": 0
        },
        "props": {
          "style": {
            "classes": "Table/Filter_Header",
            "textAlign": "end"
          },
          "text": "Search:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Search"
        },
        "position": {
          "basis": "220px",
          "shrink": 0
        },
        "props": {
          "params": {
            "clear": false
          },
          "path": "1_TEMPLATES/Filtering/Search_Bar",
          "style": {
            "classes": "Table/Search_Bar"
          },
          "useDefaultViewWidth": true
        },
        "type": "ia.display.view"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\t#Clear the session filters\n\tparam \u003d self.session.custom.filters\n\tfilters.clearPageFilters(param, self.page.props.pageId)\n\t#Clear the filter components\n\tself.getSibling(\"FirstName\").props.params.clear \u003d True\n\tself.getSibling(\"LastName\").props.params.clear \u003d True\n\tself.getSibling(\"BirthDate\").props.params.clear \u003d True\n\tself.getSibling(\"MinAge\").props.params.clear \u003d True\n\tself.getSibling(\"MaxAge\").props.params.clear \u003d True\n\tself.getSibling(\"Shelter\").props.params.clear \u003d True\n\t\n\tself.getSibling(\"Search\").props.params.clear \u003d True\n"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "clearFilters"
        },
        "position": {
          "basis": "30px",
          "shrink": 0
        },
        "propConfig": {
          "props.image.icon.color": {
            "binding": {
              "config": {
                "path": "session.custom.filters"
              },
              "transforms": [
                {
                  "code": "\tfilter \u003d filters.retrievePageFilters(value, self.page.props.pageId)\n\tif len(filter):\n\t\treturn \u0027#3ECED9\u0027\n\telse:\n\t\treturn \u0027#0C4E8B\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.style.classes": {
            "binding": {
              "config": {
                "path": "session.custom.filters"
              },
              "transforms": [
                {
                  "code": "\tfilter \u003d filters.retrievePageFilters(value, self.page.props.pageId)\n\tif len(filter):\n\t\treturn \u0027Filter/Filter_Border_TeelBlue Filter/Filter_Container\u0027\n\telse:\n\t\treturn \u0027Filter/Filter_Border_Default Filter/Filter_Container\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "image": {
            "height": 16,
            "icon": {
              "path": "material/close"
            },
            "position": "center",
            "width": 16
          },
          "style": {},
          "text": "",
          "textStyle": {
            "classes": "GreyColor"
          }
        },
        "type": "ia.input.button"
      }
    ],
    "events": {
      "system": {
        "onStartup": {
          "config": {
            "script": "\timport traceback\n\ttry:\n\t\ttoday \u003d system.date.now()\n\t\tdob_min \u003d -1 * int(self.view.params.max_age)\n\t\tdob_max \u003d -1 * int(self.view.params.min_age )\n\t\tself.view.params.dob_start \u003d system.date.addYears(today,dob_min)\n\t\tself.view.params.dob_end \u003d system.date.addYears(today,dob_max)\n\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants_Filter ParticipantDashboardAgeRange onStartup\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "props": {
      "style": {
        "classes": "Filter/Header_Text"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "ParticipantDashboardAgeRange",
          "pageScope": true,
          "script": "\timport traceback\n\ttry:\n\t\t#Get the min and max age from the message payload\n\t\tself.view.params.min_age \u003d payload[\u0027min\u0027]\n\t\tself.view.params.max_age \u003d payload[\u0027max\u0027]\n\t\t#Calculate the date of birth range\n\t\ttoday \u003d system.date.now()\n\t\tdob_min \u003d -1 * int(self.view.params.max_age)\n\t\tdob_max \u003d -1 * int(self.view.params.min_age )\n\t\tself.view.params.dob_start \u003d system.date.addYears(today,dob_min)\n\t\tself.view.params.dob_end \u003d system.date.addYears(today,dob_max)\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants_Filter ParticipantDashboardAgeRange Message\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)",
          "sessionScope": true,
          "viewScope": true
        }
      ]
    },
    "type": "ia.container.flex"
  }
}