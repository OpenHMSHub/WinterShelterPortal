{
  "custom": {
    "RegistrationData": {
      "active": 1,
      "alt_phone": "000-000-0000",
      "case_manager_id": 0,
      "chronic_homeless": null,
      "city": "",
      "communication_type_id": 2,
      "congregation": "",
      "disability_id": 4,
      "dob": {
        "$": [
          "ts",
          192,
          1632757844178
        ],
        "$ts": -1058554800000
      },
      "dob_quality": 2,
      "email": "",
      "emergency_contact_email": "",
      "emergency_contact_name": "",
      "emergency_contact_phone": "123-456-2345",
      "emergency_contact_type_id": 5,
      "employer": "",
      "ethnicity_id": 4,
      "family_id": null,
      "first_name": "Phillip",
      "gender_id": 0,
      "hoh_relationship_id": 8,
      "human_id": 14825,
      "insurance_type_id": null,
      "last_name": "Bourner",
      "mail_service": null,
      "middle_name": "H",
      "nick_name": "Phil",
      "participant_id": 4677,
      "phone": "123-456-1234",
      "race_id": 8,
      "school": "",
      "so_registry": -1,
      "ssn": "123-45-6789",
      "ssn_quality_id": 5,
      "state": "",
      "street": "",
      "suffix_name": "",
      "time_deceased": 1591938000000,
      "tri_morbid": null,
      "veteran_id": 4,
      "zip_code": ""
    },
    "func_refresh": false,
    "sql_data": {
      "$": [
        "ds",
        192,
        1632757844165
      ],
      "$columns": [
        {
          "data": [
            14825
          ],
          "name": "human_id",
          "type": "Integer"
        },
        {
          "data": [
            true
          ],
          "name": "fullRegistration",
          "type": "Boolean"
        },
        {
          "data": [
            null
          ],
          "name": "time_retired",
          "type": "Date"
        },
        {
          "data": [
            1590210000000
          ],
          "name": "time_registered",
          "type": "Date"
        },
        {
          "data": [
            false
          ],
          "name": "suspension_active",
          "type": "Boolean"
        },
        {
          "data": [
            0
          ],
          "name": "case_manager_id",
          "type": "Integer"
        },
        {
          "data": [
            "Martina Condron"
          ],
          "name": "employee_name",
          "type": "String"
        },
        {
          "data": [
            "123456789"
          ],
          "name": "ssn",
          "type": "String"
        },
        {
          "data": [
            5
          ],
          "name": "ssn_quality_id",
          "type": "Integer"
        },
        {
          "data": [
            "Client refused"
          ],
          "name": "ssn_quality",
          "type": "String"
        },
        {
          "data": [
            "Phillip"
          ],
          "name": "first_name",
          "type": "String"
        },
        {
          "data": [
            "H"
          ],
          "name": "middle_name",
          "type": "String"
        },
        {
          "data": [
            "Bourner"
          ],
          "name": "last_name",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "suffix_name",
          "type": "String"
        },
        {
          "data": [
            "Phil"
          ],
          "name": "nick_name",
          "type": "String"
        },
        {
          "data": [
            -1058554800000
          ],
          "name": "dob",
          "type": "Date"
        },
        {
          "data": [
            2
          ],
          "name": "dob_quality_id",
          "type": "Integer"
        },
        {
          "data": [
            "Full DOB Reported"
          ],
          "name": "dob_quality",
          "type": "String"
        },
        {
          "data": [
            85
          ],
          "name": "Age",
          "type": "Integer"
        },
        {
          "data": [
            0
          ],
          "name": "gender_id",
          "type": "Integer"
        },
        {
          "data": [
            "Male"
          ],
          "name": "gender",
          "type": "String"
        },
        {
          "data": [
            8
          ],
          "name": "race_id",
          "type": "Integer"
        },
        {
          "data": [
            "Data not collected"
          ],
          "name": "race",
          "type": "String"
        },
        {
          "data": [
            4
          ],
          "name": "ethnicity_id",
          "type": "Integer"
        },
        {
          "data": [
            "Data not collected"
          ],
          "name": "ethnicity",
          "type": "String"
        },
        {
          "data": [
            1591938000000
          ],
          "name": "time_deceased",
          "type": "Date"
        },
        {
          "data": [
            4
          ],
          "name": "veteran_id",
          "type": "Integer"
        },
        {
          "data": [
            "Data not collected"
          ],
          "name": "veteran",
          "type": "String"
        },
        {
          "data": [
            4
          ],
          "name": "disability_id",
          "type": "Integer"
        },
        {
          "data": [
            "Data not collected"
          ],
          "name": "disability",
          "type": "String"
        },
        {
          "data": [
            null
          ],
          "name": "tri_morbid",
          "type": "Boolean"
        },
        {
          "data": [
            null
          ],
          "name": "chronic_homeless",
          "type": "Boolean"
        },
        {
          "data": [
            null
          ],
          "name": "so_registry",
          "type": "Boolean"
        },
        {
          "data": [
            null
          ],
          "name": "mail_service",
          "type": "Boolean"
        },
        {
          "data": [
            null
          ],
          "name": "family_id",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "family",
          "type": "String"
        },
        {
          "data": [
            8
          ],
          "name": "hoh_relationship_id",
          "type": "Integer"
        },
        {
          "data": [
            "Data Not Collected"
          ],
          "name": "hoh_relationship",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "street",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "city",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "state",
          "type": "String"
        },
        {
          "data": [
            0
          ],
          "name": "zip_code",
          "type": "Integer"
        },
        {
          "data": [
            "1234561234"
          ],
          "name": "phone",
          "type": "String"
        },
        {
          "data": [
            "0000000000"
          ],
          "name": "alt_phone",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "email",
          "type": "String"
        },
        {
          "data": [
            2
          ],
          "name": "communication_type_id",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "insurance_type_id",
          "type": "Integer"
        },
        {
          "data": [
            "Phone Call"
          ],
          "name": "communication_type",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "emergency_contact_name",
          "type": "String"
        },
        {
          "data": [
            5
          ],
          "name": "emergency_contact_type_id",
          "type": "Integer"
        },
        {
          "data": [
            "1234562345"
          ],
          "name": "emergency_contact_phone",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "emergency_contact_email",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "employer",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "school",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "congregation",
          "type": "String"
        }
      ]
    }
  },
  "params": {
    "participant_id": 4677
  },
  "propConfig": {
    "custom.RegistrationData": {
      "persistent": true
    },
    "custom.func_refresh": {
      "onChange": {
        "enabled": null,
        "script": "\timport traceback\n\ttry:\n\t\tif self.custom.func_refresh:\n\t\t\tdata \u003d self.custom.sql_data\n\t\t\t#ID\n\t\t\tself.custom.RegistrationData.human_id \u003d data.getValueAt(0,\u0027human_id\u0027)\n\t\t\tself.custom.RegistrationData.participant_id \u003d self.params.participant_id\n\t\t\t#Name\n\t\t\t#Set values to empty string as default\n\t\t\tself.custom.RegistrationData.first_name \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.middle_name \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.last_name \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.suffix_name \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.nick_name \u003d \u0027\u0027\n\t\t\t#Only load the data if not null\n\t\t\tif data.getValueAt(0,\u0027first_name\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.first_name \u003d data.getValueAt(0,\u0027first_name\u0027)\n\t\t\tif data.getValueAt(0,\u0027middle_name\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.middle_name \u003d data.getValueAt(0,\u0027middle_name\u0027)\n\t\t\tif data.getValueAt(0,\u0027last_name\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.last_name \u003d data.getValueAt(0,\u0027last_name\u0027)\n\t\t\tif data.getValueAt(0,\u0027suffix_name\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.suffix_name \u003d data.getValueAt(0,\u0027suffix_name\u0027)\n\t\t\tif data.getValueAt(0,\u0027nick_name\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.nick_name \u003d data.getValueAt(0,\u0027nick_name\u0027)\n\t\t\tself.custom.RegistrationData.gender_id \u003d data.getValueAt(0,\u0027gender_id\u0027)\n\t\t\t#Numbers\n\t\t\tactive \u003d data.getValueAt(0,\u0027time_retired\u0027)\n\t\t\tif active !\u003d None: #Participant is not active if time retired has a date\n\t\t\t\tself.custom.RegistrationData.active \u003d 0\n\t\t\telse:\n\t\t\t\tself.custom.RegistrationData.active \u003d 1\n\t\t\tself.custom.RegistrationData.case_manager_id \u003d data.getValueAt(0,\u0027case_manager_id\u0027)\n\t\t\tssn \u003d data.getValueAt(0,\u0027ssn\u0027)[:3] + \u0027-\u0027 + data.getValueAt(0,\u0027ssn\u0027)[3:5] + \u0027-\u0027 + data.getValueAt(0,\u0027ssn\u0027)[5:]\n\t\t\tself.custom.RegistrationData.ssn \u003d ssn\n\t\t\tself.custom.RegistrationData.ssn_quality_id \u003d data.getValueAt(0,\u0027ssn_quality_id\u0027)\n\t\t\tdob \u003d data.getValueAt(0,\u0027dob\u0027)\n\t\t\tif dob \u003d\u003d None:\n\t\t\t\tself.custom.RegistrationData.dob \u003d None\n\t\t\telse:\n\t\t\t\tself.custom.RegistrationData.dob \u003d system.date.fromMillis(system.date.toMillis(dob))\n\t\t\t\n\t\t\tself.custom.RegistrationData.dob_quality \u003d data.getValueAt(0,\u0027dob_quality_id\u0027)\n\n\t\t\t#Status\t\n\t\t\tself.custom.RegistrationData.race_id \u003d data.getValueAt(0,\u0027race_id\u0027)\n\t\t\tself.custom.RegistrationData.ethnicity_id \u003d data.getValueAt(0,\u0027ethnicity_id\u0027)\n\t\t\tself.custom.RegistrationData.veteran_id \u003d data.getValueAt(0,\u0027veteran_id\u0027)\n\t\t\tself.custom.RegistrationData.disability_id \u003d data.getValueAt(0,\u0027disability_id\u0027)\n\t\t\ttime_deceased \u003d data.getValueAt(0,\u0027time_deceased\u0027)\n\t\t\tif time_deceased \u003d\u003d None:\n\t\t\t\tself.custom.RegistrationData.time_deceased \u003d None\n\t\t\telse:\n\t\t\t\tself.custom.RegistrationData.time_deceased \u003d system.date.toMillis(time_deceased)\n\t\t\t#Tri-morbid\n\t\t\ttri_morbid \u003d data.getValueAt(0,\u0027tri_morbid\u0027)\n\t\t\tif tri_morbid \u003d\u003d True:\n\t\t\t\tself.custom.RegistrationData.tri_morbid \u003d 1\n\t\t\telif tri_morbid \u003d\u003d False:\n\t\t\t\tself.custom.RegistrationData.tri_morbid \u003d 0\n\t\t\telse:\n\t\t\t\tself.custom.RegistrationData.tri_morbid \u003d -1\t\t\n\t\t\t#Chronic Homeless\n\t\t\tchronic_homeless \u003d data.getValueAt(0,\u0027chronic_homeless\u0027)\n\t\t\tif chronic_homeless \u003d\u003d True:\n\t\t\t\tself.custom.RegistrationData.chronic_homeless \u003d 1\n\t\t\telif chronic_homeless \u003d\u003d False:\n\t\t\t\tself.custom.RegistrationData.chronic_homeless \u003d 0\n\t\t\telse:\n\t\t\t\tself.custom.RegistrationData.chronic_homeless \u003d -1\n\t\t\t#SO Registry\n\t\t\tso_registry \u003d data.getValueAt(0,\u0027so_registry\u0027)\n\t\t\tif so_registry \u003d\u003d True:\n\t\t\t\tself.custom.RegistrationData.so_registry \u003d 1\n\t\t\telif so_registry \u003d\u003d False:\n\t\t\t\tself.custom.RegistrationData.so_registry \u003d 0\n\t\t\telse:\n\t\t\t\tself.custom.RegistrationData.so_registry \u003d -1\n\t\t\t#Mail Service\n\t\t\tmail_service \u003d data.getValueAt(0,\u0027mail_service\u0027)\n\t\t\tif mail_service \u003d\u003d True:\n\t\t\t\tself.custom.RegistrationData.mail_service \u003d 1\n\t\t\telif mail_service \u003d\u003d False:\n\t\t\t\tself.custom.RegistrationData.mail_service \u003d 0\n\t\t\telse:\n\t\t\t\tself.custom.RegistrationData.mail_service \u003d -1\n\t\t\t#Address\n\t\t\t#Set values to empty string as default\n\t\t\tself.custom.RegistrationData.street \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.city \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.state \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.zip_code \u003d \u0027\u0027\n\t\t\t#Only load the data if not null\n\t\t\tif data.getValueAt(0,\u0027street\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.street \u003d data.getValueAt(0,\u0027street\u0027)\n\t\t\tif data.getValueAt(0,\u0027city\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.city \u003d data.getValueAt(0,\u0027city\u0027)\n\t\t\tif data.getValueAt(0,\u0027state\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.state \u003d data.getValueAt(0,\u0027state\u0027)\n\t\t\tif data.getValueAt(0,\u0027zip_code\u0027) !\u003d None:\n\t\t\t\tif int(data.getValueAt(0,\u0027zip_code\u0027)) \u003e 0:\n\t\t\t\t\tself.custom.RegistrationData.zip_code \u003d data.getValueAt(0,\u0027zip_code\u0027)\n\t\t\t#Contact info\n\t\t\t#Set values to empty string as default\n\t\t\tself.custom.RegistrationData.phone \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.alt_phone \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.email \u003d \u0027\u0027\n\t\t\t#Only load the data if not null\n\t\t\tif data.getValueAt(0,\u0027phone\u0027) !\u003d None:\n\t\t\t\tphone \u003d data.getValueAt(0,\u0027phone\u0027)[:3] + \u0027-\u0027 + data.getValueAt(0,\u0027phone\u0027)[3:6] + \u0027-\u0027 + data.getValueAt(0,\u0027phone\u0027)[6:]\n\t\t\t\tself.custom.RegistrationData.phone \u003d phone\n\t\t\tif data.getValueAt(0,\u0027alt_phone\u0027) !\u003d None:\n\t\t\t\talt_phone \u003d data.getValueAt(0,\u0027alt_phone\u0027)[:3] + \u0027-\u0027 + data.getValueAt(0,\u0027alt_phone\u0027)[3:6] + \u0027-\u0027 + data.getValueAt(0,\u0027alt_phone\u0027)[6:]\n\t\t\t\tself.custom.RegistrationData.alt_phone \u003d alt_phone\n\t\t\tif data.getValueAt(0,\u0027email\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.email \u003d data.getValueAt(0,\u0027email\u0027)\n\t\t\tself.custom.RegistrationData.communication_type_id \u003d data.getValueAt(0,\u0027communication_type_id\u0027)\n\t\t\tself.custom.RegistrationData.insurance_type_id \u003d data.getValueAt(0,\u0027insurance_type_id\u0027)\n\t\t\t#Emergency Contact info\n\t\t\t#Set values to empty string as default\n\t\t\tself.custom.RegistrationData.emergency_contact_name \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.emergency_contact_phone \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.emergency_contact_email \u003d \u0027\u0027\n\t\t\t#Only load the data if not null\n\t\t\tif data.getValueAt(0,\u0027emergency_contact_name\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.emergency_contact_name \u003d data.getValueAt(0,\u0027emergency_contact_name\u0027)\n\t\t\tif data.getValueAt(0,\u0027emergency_contact_phone\u0027) !\u003d None:\n\t\t\t\tec_phone \u003d data.getValueAt(0,\u0027emergency_contact_phone\u0027)[:3] + \u0027-\u0027 + data.getValueAt(0,\u0027emergency_contact_phone\u0027)[3:6] + \u0027-\u0027 + data.getValueAt(0,\u0027emergency_contact_phone\u0027)[6:]\n\t\t\t\tself.custom.RegistrationData.emergency_contact_phone \u003d ec_phone\n\t\t\tif data.getValueAt(0,\u0027emergency_contact_email\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.emergency_contact_email \u003d data.getValueAt(0,\u0027emergency_contact_email\u0027)\n\t\t\tself.custom.RegistrationData.emergency_contact_type_id \u003d data.getValueAt(0,\u0027emergency_contact_type_id\u0027)\n\t\t\t#Misc info\t\t\t\n\t\t\tself.custom.RegistrationData.family_id \u003d data.getValueAt(0,\u0027family_id\u0027)\n\t\t\tself.custom.RegistrationData.hoh_relationship_id \u003d data.getValueAt(0,\u0027hoh_relationship_id\u0027)\n\t\t\t#Set values to empty string as default\n\t\t\tself.custom.RegistrationData.employer \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.school \u003d \u0027\u0027\n\t\t\tself.custom.RegistrationData.congregation \u003d \u0027\u0027\n\t\t\t#Only load the data if not null\n\t\t\tif data.getValueAt(0,\u0027employer\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.employer \u003d data.getValueAt(0,\u0027employer\u0027)\n\t\t\tif data.getValueAt(0,\u0027school\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.school \u003d data.getValueAt(0,\u0027school\u0027)\n\t\t\tif data.getValueAt(0,\u0027congregation\u0027) !\u003d None:\n\t\t\t\tself.custom.RegistrationData.congregation \u003d data.getValueAt(0,\u0027congregation\u0027)\n\t\t\n\t\t\n\t\t\n\t\t#set the refresh trigger to false when finished\n\t\tself.custom.func_refresh \u003d False\n\t\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants Personal Detail Edit view.custom.func_refresh\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
      },
      "persistent": true
    },
    "custom.sql_data": {
      "binding": {
        "config": {
          "parameters": {
            "participant_id": "{view.params.participant_id}"
          },
          "queryPath": "Participants/Personal/PersonalDetailSelect",
          "returnFormat": "dataset"
        },
        "type": "query"
      },
      "onChange": {
        "enabled": null,
        "script": "\tself.custom.func_refresh \u003d True"
      },
      "persistent": true
    },
    "params.participant_id": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 583,
      "width": 1344
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Header"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "params": {
            "Text": "Personal Information"
          },
          "path": "Participants/Templates/Header",
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Label_0"
        },
        "position": {
          "basis": "100px",
          "display": false,
          "shrink": 0
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.custom.sql_data"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_1"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\u0027First:\u0027 +\r\n{view.custom.RegistrationData.first_name} +\r\n\u0027, Middle:\u0027 +\r\n{view.custom.RegistrationData.middle_name}+\r\n\u0027, Last:\u0027 +\r\n{view.custom.RegistrationData.last_name} +\r\n\u0027, Suffix:\u0027 +\r\n{view.custom.RegistrationData.suffix_name} +\r\n\u0027, Nick:\u0027 +\r\n{view.custom.RegistrationData.nick_name} +\r\n\u0027, Gender:\u0027 +\r\n{view.custom.RegistrationData.gender_id}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Row10"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.first_name": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.first_name"
              },
              "type": "property"
            }
          },
          "props.params.gender_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.gender_id"
              },
              "type": "property"
            }
          },
          "props.params.last_name": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.last_name"
              },
              "type": "property"
            }
          },
          "props.params.middle_name": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.middle_name"
              },
              "type": "property"
            }
          },
          "props.params.nick_name": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.nick_name"
              },
              "type": "property"
            }
          },
          "props.params.suffix_name": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.suffix_name"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Registration/Detail/Edit/Row10",
          "style": {
            "marginLeft": "25px",
            "marginRight": "25px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "32px",
          "display": false,
          "shrink": 0
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\u0027Active:\u0027 +\r\n{view.custom.RegistrationData.active} +\r\n\u0027, Case Mgr:\u0027 +\r\n{view.custom.RegistrationData.case_manager_id}+\r\n\u0027, ssn:\u0027 +\r\n{view.custom.RegistrationData.ssn} +\r\n\u0027, ssn qual:\u0027 +\r\n{view.custom.RegistrationData.ssn_quality_id} +\r\n\u0027, dob:\u0027 +\r\n{view.custom.RegistrationData.dob} +\r\n\u0027, dob qual:\u0027 + \r\n{view.custom.RegistrationData.dob_quality}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Row20"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.active": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.active"
              },
              "type": "property"
            }
          },
          "props.params.case_manager_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.case_manager_id"
              },
              "type": "property"
            }
          },
          "props.params.dob": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.dob"
              },
              "type": "property"
            }
          },
          "props.params.dob_quality_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.dob_quality"
              },
              "type": "property"
            }
          },
          "props.params.ssn": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.ssn"
              },
              "type": "property"
            }
          },
          "props.params.ssn_quality_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.ssn_quality_id"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Registration/Detail/Edit/Row20",
          "style": {
            "marginLeft": "25px",
            "marginRight": "25px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Label_2"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\u0027Race:\u0027 +\r\n{view.custom.RegistrationData.race_id} +\r\n\u0027, Ethnicity:\u0027 +\r\n{view.custom.RegistrationData.ethnicity_id}+\r\n\u0027, Veteran:\u0027 +\r\n{view.custom.RegistrationData.veteran_id} +\r\n\u0027, Disability:\u0027 +\r\n{view.custom.RegistrationData.disability_id} +\r\n\u0027, Deceased:\u0027 +\r\n{view.custom.RegistrationData.time_deceased}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Row30"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.disability_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.disability_id"
              },
              "type": "property"
            }
          },
          "props.params.ethnicity_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.ethnicity_id"
              },
              "type": "property"
            }
          },
          "props.params.race_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.race_id"
              },
              "type": "property"
            }
          },
          "props.params.time_deceased": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.time_deceased"
              },
              "type": "property"
            }
          },
          "props.params.veteran_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.veteran_id"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Registration/Detail/Edit/Row30",
          "style": {
            "marginLeft": "25px",
            "marginRight": "25px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Label_3"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\u0027Street:\u0027 +\r\n{view.custom.RegistrationData.street} +\r\n\u0027, City:\u0027 +\r\n{view.custom.RegistrationData.city}+\r\n\u0027, State:\u0027 +\r\n{view.custom.RegistrationData.state} +\r\n\u0027, Zip:\u0027 +\r\n{view.custom.RegistrationData.zip_code}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Row35"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.chronic_homeless": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.chronic_homeless"
              },
              "type": "property"
            }
          },
          "props.params.mail_service": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.mail_service"
              },
              "type": "property"
            }
          },
          "props.params.so_registry": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.so_registry"
              },
              "type": "property"
            }
          },
          "props.params.tri_morbid": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.tri_morbid"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Registration/Detail/Edit/Row35",
          "style": {
            "marginLeft": "25px",
            "marginRight": "25px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Row40"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.city": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.city"
              },
              "type": "property"
            }
          },
          "props.params.state": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.state"
              },
              "type": "property"
            }
          },
          "props.params.street": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.street"
              },
              "type": "property"
            }
          },
          "props.params.zip_code": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.zip_code"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Registration/Detail/Edit/Row40",
          "style": {
            "marginLeft": "25px",
            "marginRight": "25px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Row50"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.alt_phone": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.alt_phone"
              },
              "type": "property"
            }
          },
          "props.params.communication_type_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.communication_type_id"
              },
              "type": "property"
            }
          },
          "props.params.email": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.email"
              },
              "type": "property"
            }
          },
          "props.params.insurance_type_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.insurance_type_id"
              },
              "type": "property"
            }
          },
          "props.params.phone": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.phone"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Registration/Detail/Edit/Row50",
          "style": {
            "marginLeft": "25px",
            "marginRight": "25px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Row60"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.emergency_contact_email": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.emergency_contact_email"
              },
              "type": "property"
            }
          },
          "props.params.emergency_contact_name": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.emergency_contact_name"
              },
              "type": "property"
            }
          },
          "props.params.emergency_contact_phone": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.emergency_contact_phone"
              },
              "type": "property"
            }
          },
          "props.params.emergency_contact_type_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.emergency_contact_type_id"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Registration/Detail/Edit/Row60",
          "style": {
            "marginLeft": "25px",
            "marginRight": "25px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Row70"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.congregation": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.congregation"
              },
              "type": "property"
            }
          },
          "props.params.employer": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.employer"
              },
              "type": "property"
            }
          },
          "props.params.family_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.family_id"
              },
              "type": "property"
            }
          },
          "props.params.hoh_relationship_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.hoh_relationship_id"
              },
              "type": "property"
            }
          },
          "props.params.school": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.RegistrationData.school"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Registration/Detail/Edit/Row70",
          "style": {
            "marginLeft": "25px",
            "marginRight": "25px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\timport re\n\ttry:\n\t\tproject \u003d \"RITI\"\n\t\t### Declare parameters \n\t\t#General Info\n\t\tuser_name \u003d self.session.props.auth.user.userName\n\t\thuman_id \u003d self.view.custom.RegistrationData.human_id\n\t\tparticipant_id \u003d self.view.custom.RegistrationData.participant_id\n\t\t#First Row\t\t\n\t\tfirst_name \u003d self.view.custom.RegistrationData.first_name\n\t\tmiddle_name \u003d self.view.custom.RegistrationData.middle_name\n\t\tlast_name \u003d self.view.custom.RegistrationData.last_name\n\t\tsuffix_name \u003d self.view.custom.RegistrationData.suffix_name\n\t\tnick_name \u003d self.view.custom.RegistrationData.nick_name\n\t\tgender_id \u003d self.view.custom.RegistrationData.gender_id\n\t\t#Second Row\n\t\tif self.view.custom.RegistrationData.active \u003d\u003d 0:#Retire Inactive Participant\n\t\t\tactive \u003d system.date.now()\n\t\telse:\n\t\t\tactive \u003d None\n\t\tcase_manager_id \u003d self.view.custom.RegistrationData.case_manager_id\n\t\tssn \u003d self.view.custom.RegistrationData.ssn\n\t\tssn_quality_id \u003d self.view.custom.RegistrationData.ssn_quality_id\n\t\tdob \u003d self.view.custom.RegistrationData.dob\n\t\tdob_quality_id \u003d self.view.custom.RegistrationData.dob_quality\n\t\t#Third Row\n\t\trace_id \u003d self.view.custom.RegistrationData.race_id\n\t\tethnicity_id \u003d self.view.custom.RegistrationData.ethnicity_id\n\t\tveteran_id \u003d self.view.custom.RegistrationData.veteran_id\n\t\tdisability_id \u003d self.view.custom.RegistrationData.disability_id\n\t\ttime_deceased \u003d self.view.custom.RegistrationData.time_deceased\n\t\t#Third+ Row\n\t\tif self.view.custom.RegistrationData.tri_morbid \u003d\u003d -1:\n\t\t\ttri_morbid \u003d None\n\t\telse:\n\t\t\ttri_morbid \u003d self.view.custom.RegistrationData.tri_morbid\n\t\tif self.view.custom.RegistrationData.chronic_homeless \u003d\u003d -1:\n\t\t\tchronic_homeless \u003d None\n\t\telse:\n\t\t\tchronic_homeless \u003d self.view.custom.RegistrationData.chronic_homeless\n\t\tif self.view.custom.RegistrationData.so_registry \u003d\u003d -1:\n\t\t\tso_registry \u003d None\n\t\telse:\n\t\t\tso_registry \u003d self.view.custom.RegistrationData.so_registry\n\t\tif self.view.custom.RegistrationData.mail_service \u003d\u003d -1:\n\t\t\tmail_service \u003d None\n\t\telse:\n\t\t\tmail_service \u003d self.view.custom.RegistrationData.mail_service\n\t\t#Fourth Row\n\t\tstreet \u003d self.view.custom.RegistrationData.street\n\t\tcity \u003d self.view.custom.RegistrationData.city\n\t\tstate \u003d self.view.custom.RegistrationData.state\n\t\tzip_code \u003d self.view.custom.RegistrationData.zip_code\n\t\t#Fifth Row\n\t\tphone \u003d self.view.custom.RegistrationData.phone\n\t\talt_phone \u003d self.view.custom.RegistrationData.alt_phone\n\t\temail \u003d self.view.custom.RegistrationData.email\n\t\tcommunication_type_id \u003d self.view.custom.RegistrationData.communication_type_id\n\t\tinsurance_type_id \u003d self.view.custom.RegistrationData.insurance_type_id\n\t\t#Sixth Row\n\t\temergency_contact_name \u003d self.view.custom.RegistrationData.emergency_contact_name\n\t\temergency_contact_phone \u003d self.view.custom.RegistrationData.emergency_contact_phone\n\t\temergency_contact_email \u003d self.view.custom.RegistrationData.emergency_contact_email\n\t\temergency_contact_type_id \u003d self.view.custom.RegistrationData.emergency_contact_type_id\n\t\t#Seventh Row\n\t\tfamily_id \u003d self.view.custom.RegistrationData.family_id\n\t\thoh_relationship_id \u003d self.view.custom.RegistrationData.hoh_relationship_id\n\t\temployer \u003d self.view.custom.RegistrationData.employer\n\t\tschool \u003d self.view.custom.RegistrationData.school\n\t\tcongregation \u003d self.view.custom.RegistrationData.congregation\n\t\t\t\t\n\t\t## Check if parameters are filled in correctly \n\t\tif None in [human_id,participant_id,first_name,last_name,gender_id,dob_quality_id,ssn_quality_id]:\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\u0027Null Error\u0027)\n\t\t\terror_message \u003d \"Please fill in all the mandatory fields correctly before saving (Null Error).\"\n\t\telif None in [race_id,ethnicity_id,veteran_id]:\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\u0027Null Error\u0027)\n\t\t\terror_message \u003d \"Please fill in all the mandatory fields correctly before saving (Null Error).\"\n\t\telif first_name.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\u0027First Name Error\u0027)\n\t\t\terror_message \u003d \"Please fill in the Participant First Name before saving.\"\n\t\telif last_name.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\u0027Last Name Error\u0027)\n\t\t\terror_message \u003d \"Please fill in the Participant Last Name before saving.\"\n\t\telif gender_id \u003c 0:\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\u0027Gender Error\u0027)\n\t\t\terror_message \u003d \"Please fill in the Participant Gender before saving.\"\n\t\telif ssn_quality_id \u003c 0:\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\u0027SSN Quality Error\u0027)\n\t\t\terror_message \u003d \"Please fill in the SSN Quality before saving.\"\n\t\telif dob_quality_id \u003c 0:\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\u0027DOB Quality Error\u0027)\n\t\t\terror_message \u003d \"Please fill in the Date of Birth Quality before saving.\"\n\t\telif race_id \u003c 0:\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\u0027Race Error\u0027)\n\t\t\terror_message \u003d \"Please fill in the Participant Race before saving.\"\n\t\telif ethnicity_id \u003c 0:\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\u0027Ethnicity Error\u0027)\n\t\t\terror_message \u003d \"Please fill in the Participant Ethnicity before saving.\"\n\t\telif veteran_id \u003c 0:\n\t\t\tvalid \u003d False\n\t\t\t#system.perspective.print(\u0027Veteran Error\u0027)\n\t\t\terror_message \u003d \"Please fill in the Participant Veteran Status before saving.\"\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t\tsystem.perspective.print(\u0027Data Valid\u0027)\n\t\t### Check if data is valid otherwise show error message.\n\t\tif valid:\n\n\t\t\t## Convert Phone numbers to numeric value only\n\t\t\tphone \u003d normalize.phone(phone)\n\t\t\talt_phone \u003d normalize.phone(alt_phone)\n\t\t\temergency_contact_phone \u003d normalize.phone(emergency_contact_phone)\n\t\t\t\n\t\t\t#SSN validation and normalization\n\t\t\tssn \u003d normalize.ssn(ssn)\n\t\t\t#system.perspective.print(ssn)\n\t\t\t\n\t\t\t#DOB validation\t\n\t\t\ttry:\n\t\t\t\tdob \u003d system.date.parse(dob)\n\t\t\t\t#system.perspective.print(\u0027DOB sucessfully parsed: \u0027 + str(dob))\n\t\t\texcept:\n\t\t\t\tdob \u003d \u00271900-01-01 00:00:00\u0027\n\t\t\t\t#system.perspective.print(\u0027DOB set to default: \u0027 + str(dob))\n\t\t\t#Full registration\n\t\t\t#If any item is \u0027Data not Collected\u0027 then registration is partial\n\t\t\t#If full registration then set the timeRegistered in the db\n\t\t\tfull_register \u003d True\n\t\t\tif gender_id \u003d\u003d 5:\n\t\t\t\tfull_register \u003d False\n\t\t\telif ssn_quality_id \u003d\u003d 6:\n\t\t\t\tfull_register \u003d False\n\t\t\telif dob_quality_id \u003d\u003d 6:\n\t\t\t\tfull_register \u003d False\n\t\t\telif race_id \u003d\u003d 8:\n\t\t\t\tfull_register \u003d False\n\t\t\telif veteran_id \u003d\u003d 4:\n\t\t\t\tfull_register \u003d False\t\n\t\t\t### Create transaction\n\t\t\ttransactionFailed \u003d False\n\t\t\ttxId \u003d system.db.beginTransaction(timeout\u003d5000)\n\t\t\ttry:\n\t\t\t\t#Update the Human Data\n\t\t\t\tpath \u003d \"Participants/Personal/PersonalDetailUpdate\"\n\t\t\t\tparameters \u003d {\"full_register\":full_register,\n\t\t\t\t\t\t\t\"first_name\":first_name,\n\t\t\t\t\t\t\t\"middle_name\":middle_name,\n\t\t\t\t\t\t\t\"last_name\":last_name,\n\t\t\t\t\t\t\t\"suffix_name\":suffix_name,\n\t\t\t\t\t\t\t\"nick_name\":nick_name,\n\t\t\t\t\t\t\t\"dob\":dob,\n\t\t\t\t\t\t\t\"dob_quality_id\":dob_quality_id,\n\t\t\t\t\t\t\t\"ssn\":ssn,\n\t\t\t\t\t\t\t\"ssn_quality_id\":ssn_quality_id,\n\t\t\t\t\t\t\t\"gender_id\":gender_id,\n\t\t\t\t\t\t\t\"race_id\":race_id,\n\t\t\t\t\t\t\t\"ethnicity_id\":ethnicity_id,\n\t\t\t\t\t\t\t\"veteran_id\":veteran_id,\n\t\t\t\t\t\t\t\"disability_id\":disability_id,\n\t\t\t\t\t\t\t\"time_deceased\":time_deceased,\n\t\t\t\t\t\t\t\"tri_morbid\":tri_morbid,\n\t\t\t\t\t\t\t\"chronic_homeless\":chronic_homeless,\n\t\t\t\t\t\t\t\"so_registry\":so_registry,\n\t\t\t\t\t\t\t\"mail_service\":mail_service,\n\t\t\t\t\t\t\t\"street\":street,\n\t\t\t\t\t\t\t\"city\":city,\n\t\t\t\t\t\t\t\"state\":state,\n\t\t\t\t\t\t\t\"zip_code\":zip_code,\n\t\t\t\t\t\t\t\"phone\":phone,\n\t\t\t\t\t\t\t\"alt_phone\":alt_phone,\n\t\t\t\t\t\t\t\"email\":email,\n\t\t\t\t\t\t\t\"communication_type_id\":communication_type_id,\n\t\t\t\t\t\t\t\"insurance_type_id\":insurance_type_id,\n\t\t\t\t\t\t\t\"emergency_contact_name\":emergency_contact_name,\n\t\t\t\t\t\t\t\"emergency_contact_phone\":emergency_contact_phone,\n\t\t\t\t\t\t\t\"emergency_contact_email\":emergency_contact_email,\n\t\t\t\t\t\t\t\"emergency_contact_type_id\":emergency_contact_type_id,\n\t\t\t\t\t\t\t\"family_id\":family_id,\n\t\t\t\t\t\t\t\"hoh_relationship_id\":hoh_relationship_id,\n\t\t\t\t\t\t\t\"employer\":employer,\n\t\t\t\t\t\t\t\"school\":school,\n\t\t\t\t\t\t\t\"congregation\":congregation,\n\t\t\t\t\t\t\t\"human_id\":human_id\n\t\t\t\t\t\t\t}\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, tx\u003dtxId, getKey\u003dTrue)\n\t\t\t\t#Update the participant data\n\t\t\t\t#\n\t\t\t\t#\n\t\t\t\tpath \u003d \"Participants/Personal/ParticipantUpdate\"\n\t\t\t\tparameters \u003d {\"participant_id\":participant_id,\n\t\t\t\t\t\t\"case_manager_id\":case_manager_id,\n\t\t\t\t\t\t\"time_retired\":active}\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, tx\u003dtxId, getKey\u003dTrue)\n\t\t\t\t#\n\n\t\t\texcept:\n\t\t\t\ttransactionFailed \u003d True\n\t\t\t\tlogger \u003d system.util.getLogger(\"Participants RegisterParticipantPartial Button Save\")\n\t\t\t\tmsg \u003d traceback.format_exc()\n\t\t\t\tlogger.error(msg)\n\t\t\t\t\n\t\t\t### Check if an error occured rollback the transaction\n\t\t\tif transactionFailed:\n\t\t\t\tsystem.db.rollbackTransaction(txId)\n\t\t\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\n\t\t\t\tRefresh \u003d 0\n\t\t\t### Otherwise commit \n\t\t\telse:\n\t\t\t\tsystem.db.commitTransaction(txId)\n\t\t\t\t#Enroll in the Hope University, Guest House and Campus Store programs\n\t\t\t\t#Query will return a fault code if they are already enrolled, so just pass on fault\n\t\t\t\ttry:\n\t\t\t\t\t#Hope University is program #29\n\t\t\t\t\tpath \u003d \"Participants/Enrollments/ParticipantAddSelectedEnrollments\"\n\t\t\t\t\tparameters \u003d {\"participantId\":participant_id,\"programId\":29}\n\t\t\t\t\tenrollment_29 \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\texcept:\n\t\t\t\t\tpass\t\n\t\t\t\ttry:\n\t\t\t\t\t#Guest House is program #47\n\t\t\t\t\tpath \u003d \"Participants/Enrollments/ParticipantAddSelectedEnrollments\"\n\t\t\t\t\tparameters \u003d {\"participantId\":participant_id,\"programId\":47}\n\t\t\t\t\tenrollment_47 \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\texcept:\n\t\t\t\t\tpass\n\t\t\t\ttry:\n\t\t\t\t\t#Campus Store is program #24\n\t\t\t\t\tpath \u003d \"Participants/Enrollments/ParticipantAddSelectedEnrollments\"\n\t\t\t\t\tparameters \u003d {\"participantId\":participant_id,\"programId\":24}\n\t\t\t\t\tenrollment_24 \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\texcept:\n\t\t\t\t\tpass\n\t\t\t\ttry:\n\t\t\t\t\t#Mail Service is program #62\n\t\t\t\t\tif mail_service \u003d\u003d 1:\n\t\t\t\t\t\tpath \u003d \"Participants/Enrollments/ParticipantAddSelectedEnrollments\"\n\t\t\t\t\t\tparameters \u003d {\"participantId\":participant_id,\"programId\":62}\n\t\t\t\t\t\tenrollment_62 \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\texcept:\n\t\t\t\t\tpass\n\t\t\t\t\n\t\t\t\tif full_register \u003d\u003d True:\n\t\t\t\t\tself.getSibling(\"Label\").showMessage(\"Participant Updated Successfully\")\n\t\t\t\telse:\n\t\t\t\t\tself.getSibling(\"Label\").showMessage(\"Participant Updated Successfully with Data Not Collected\")\n\t\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshPersonalData\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshPersonalInformation\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\n\t\t\t\n\t\t\t### Always close the transaction\t\n\t\t\tsystem.db.closeTransaction(txId)\n\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(error_message)\n\t\t\t\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants Personal Detail Edit Button Save\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Button Save"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "15px",
                "marginLeft": "20px",
                "marginRight": "20px",
                "marginTop": "15px"
              },
              "text": "Save"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tsystem.perspective.sendMessage(messageType\u003d\"refreshPersonalData\", payload\u003d{}, scope\u003d\"session\")"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Button Cancel"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary_Orange",
                "marginBottom": "15px",
                "marginTop": "15px"
              },
              "text": "Undo/Reload"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Participant Updated Successfully with Data Not Collected"
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "root actions"
        },
        "position": {
          "basis": "65px",
          "shrink": 0
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "refreshPersonalData",
          "pageScope": true,
          "script": "\tview \u003d self.view\n\tview.refreshBinding(\"custom.sql_data\")",
          "sessionScope": true,
          "viewScope": true
        }
      ]
    },
    "type": "ia.container.flex"
  }
}