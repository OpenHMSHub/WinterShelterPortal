{
  "custom": {
    "SelectedDateFormated": [
      {
        "$": [
          "ts",
          192,
          1623764636830
        ],
        "$ts": 1616976000000
      },
      {
        "$": [
          "ts",
          192,
          1623764636830
        ],
        "$ts": 1617062400000
      }
    ],
    "eventIDS": {
      "$": [
        "ds",
        192,
        1623764737646
      ],
      "$columns": [
        {
          "data": [
            3
          ],
          "name": "instanceID",
          "type": "Integer"
        },
        {
          "data": [
            53
          ],
          "name": "parentEventID",
          "type": "Integer"
        },
        {
          "data": [
            1616994144000
          ],
          "name": "startDate",
          "type": "Date"
        },
        {
          "data": [
            1616997744000
          ],
          "name": "endDate",
          "type": "Date"
        },
        {
          "data": [
            ""
          ],
          "name": "venue",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "room",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "note",
          "type": "String"
        },
        {
          "data": [
            53
          ],
          "name": "eventID",
          "type": "Integer"
        },
        {
          "data": [
            false
          ],
          "name": "allDay",
          "type": "Boolean"
        },
        {
          "data": [
            1616994144000
          ],
          "name": "startDate",
          "type": "Date"
        },
        {
          "data": [
            1616997744000
          ],
          "name": "endDate",
          "type": "Date"
        },
        {
          "data": [
            "Test of Title"
          ],
          "name": "title",
          "type": "String"
        },
        {
          "data": [
            "Classes \u0026 Workshops"
          ],
          "name": "category",
          "type": "String"
        },
        {
          "data": [
            "AA Meeting"
          ],
          "name": "subCategory",
          "type": "String"
        },
        {
          "data": [
            "Test of Description"
          ],
          "name": "description",
          "type": "String"
        },
        {
          "data": [
            false
          ],
          "name": "audienceVolunteers",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "audienceStaff",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "audienceParticipants",
          "type": "Boolean"
        },
        {
          "data": [
            true
          ],
          "name": "audienceMen",
          "type": "Boolean"
        },
        {
          "data": [
            true
          ],
          "name": "audienceWomen",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "audienceMinors",
          "type": "Boolean"
        },
        {
          "data": [
            "Drexel"
          ],
          "name": "venue",
          "type": "String"
        },
        {
          "data": [
            "302"
          ],
          "name": "room",
          "type": "String"
        },
        {
          "data": [
            1
          ],
          "name": "volunteersNeeded",
          "type": "Integer"
        },
        {
          "data": [
            0
          ],
          "name": "staffNeeded",
          "type": "Integer"
        },
        {
          "data": [
            false
          ],
          "name": "monday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "tuesday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "wednesday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "thursday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "friday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "saturday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "sunday",
          "type": "Boolean"
        },
        {
          "data": [
            "once"
          ],
          "name": "freq",
          "type": "String"
        },
        {
          "data": [
            null
          ],
          "name": "bymonth",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "bysetpos",
          "type": "Integer"
        },
        {
          "data": [
            1
          ],
          "name": "interval",
          "type": "Integer"
        },
        {
          "data": [
            false
          ],
          "name": "repeat",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "deleted",
          "type": "Boolean"
        }
      ]
    },
    "filteredDataset": {
      "$": [
        "ds",
        192,
        1623764737657
      ],
      "$columns": [
        {
          "data": [
            3
          ],
          "name": "instanceID",
          "type": "Integer"
        },
        {
          "data": [
            53
          ],
          "name": "parentEventID",
          "type": "Integer"
        },
        {
          "data": [
            1616994144000
          ],
          "name": "startDate",
          "type": "Date"
        },
        {
          "data": [
            1616997744000
          ],
          "name": "endDate",
          "type": "Date"
        },
        {
          "data": [
            ""
          ],
          "name": "venue",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "room",
          "type": "String"
        },
        {
          "data": [
            ""
          ],
          "name": "note",
          "type": "String"
        },
        {
          "data": [
            53
          ],
          "name": "eventID",
          "type": "Integer"
        },
        {
          "data": [
            false
          ],
          "name": "allDay",
          "type": "Boolean"
        },
        {
          "data": [
            1616994144000
          ],
          "name": "startDate",
          "type": "Date"
        },
        {
          "data": [
            1616997744000
          ],
          "name": "endDate",
          "type": "Date"
        },
        {
          "data": [
            "Test of Title"
          ],
          "name": "title",
          "type": "String"
        },
        {
          "data": [
            "Classes \u0026 Workshops"
          ],
          "name": "category",
          "type": "String"
        },
        {
          "data": [
            "AA Meeting"
          ],
          "name": "subCategory",
          "type": "String"
        },
        {
          "data": [
            "Test of Description"
          ],
          "name": "description",
          "type": "String"
        },
        {
          "data": [
            false
          ],
          "name": "audienceVolunteers",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "audienceStaff",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "audienceParticipants",
          "type": "Boolean"
        },
        {
          "data": [
            true
          ],
          "name": "audienceMen",
          "type": "Boolean"
        },
        {
          "data": [
            true
          ],
          "name": "audienceWomen",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "audienceMinors",
          "type": "Boolean"
        },
        {
          "data": [
            "Drexel"
          ],
          "name": "venue",
          "type": "String"
        },
        {
          "data": [
            "302"
          ],
          "name": "room",
          "type": "String"
        },
        {
          "data": [
            1
          ],
          "name": "volunteersNeeded",
          "type": "Integer"
        },
        {
          "data": [
            0
          ],
          "name": "staffNeeded",
          "type": "Integer"
        },
        {
          "data": [
            false
          ],
          "name": "monday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "tuesday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "wednesday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "thursday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "friday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "saturday",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "sunday",
          "type": "Boolean"
        },
        {
          "data": [
            "once"
          ],
          "name": "freq",
          "type": "String"
        },
        {
          "data": [
            null
          ],
          "name": "bymonth",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "bysetpos",
          "type": "Integer"
        },
        {
          "data": [
            1
          ],
          "name": "interval",
          "type": "Integer"
        },
        {
          "data": [
            false
          ],
          "name": "repeat",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "deleted",
          "type": "Boolean"
        }
      ]
    }
  },
  "params": {
    "SelectedDay": {
      "$": [
        "ts",
        201,
        1619875384197
      ],
      "$ts": 1617012746000
    },
    "SelectedEvent": 0
  },
  "propConfig": {
    "custom.SelectedDateFormated": {
      "binding": {
        "config": {
          "path": "view.params.SelectedDay"
        },
        "transforms": [
          {
            "code": "\tstartDate \u003d system.date.setTime(value,0,0,0)\n\tendDate \u003d system.date.addDays(startDate,1) \n\treturn [startDate,endDate]",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.eventIDS": {
      "binding": {
        "config": {
          "parameters": {
            "category": "\"%\"",
            "endDate": "{view.custom.SelectedDateFormated[1]}",
            "firstDate": "{view.custom.SelectedDateFormated[0]}"
          },
          "queryPath": "Calendar/EventInstance/GetEventInstanceIDByDate"
        },
        "type": "query"
      },
      "onChange": {
        "enabled": null,
        "script": "\tif currentValue !\u003d previousValue :\n\t\t\tmessageType \u003d \u0027Selected_Event\u0027\n\t\t\tpayload \u003d {\u0027lastSelectedEvent\u0027:  0}\n\t\t\tsystem.perspective.sendMessage(messageType,payload, scope \u003d \u0027page\u0027)"
      },
      "persistent": true
    },
    "custom.filteredDataset": {
      "binding": {
        "config": {
          "struct": {
            "filters": "{/root/FlexContainer_0/EmbeddedView.props.params.selectedValues}",
            "source": "hasChanged({view.custom.eventIDS})"
          },
          "waitOnAll": true
        },
        "transforms": [
          {
            "code": "\t\n\tdataset \u003d self.custom.eventIDS\n\tfilteredDataset \u003d dataset\n\t#[instanceID, parentEventID, startDate, endDate, venue, room, note, eventID, allDay, startDate, endDate, title, category, subCategory, description, audienceVolunteers, audienceStaff, audienceParticipants, audienceMen, audienceWomen, audienceMinors, venue, room, volunteersNeeded, staffNeeded, monday, tuesday, wednesday, thursday, friday, saturday, sunday, freq, bymonth, bysetpos, interval, repeat, deleted]\n\theaders \u003d [str(x) for x in filteredDataset.getColumnNames()]\n\tfilters \u003d value[\u0027filters\u0027]\n\t\n\tif not filters:\n\t\treturn filteredDataset\n\t\n\treturnDataset \u003d []\t\n\tfor row in range(filteredDataset.getRowCount()) :\n\t\toneRow \u003d []\n\t\tcell \u003d filteredDataset.getValueAt(row,\"Category\")\n\t\tif cell !\u003d None and cell:\n\t\t\tfor filter in filters:\n\t\t\t\tif filter \u003d\u003d cell :\n\t\t\t\t\tfor x in range(filteredDataset.getColumnCount()) :\n\t\t\t\t\t\toneRow.append(filteredDataset.getValueAt(row,x))\n\t\t\t\t\treturnDataset.append(oneRow)\t\t\t\t\t\n\t\t\t\t\tbreak\n\tfilteredDataset \u003d system.dataset.toDataSet(headers,returnDataset)\t\n\t\n\treturn filteredDataset",
            "type": "script"
          }
        ],
        "type": "expr-struct"
      },
      "persistent": true
    },
    "custom.items": {
      "binding": {
        "config": {
          "path": "view.custom.filteredDataset"
        },
        "transforms": [
          {
            "code": "\tinstance \u003d []\n\tfor x in range(value.getRowCount()) :\n\t\tinstance.append({\u0027EventID\u0027 : value.getValueAt(x,\"parentEventID\"), \u0027Selected\u0027 : False, \u0027InstanceID\u0027 : value.getValueAt(x,\"instanceID\")})\n\treturn instance",
            "type": "script"
          }
        ],
        "type": "property"
      }
    },
    "params.SelectedDay": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.SelectedEvent": {
      "paramDirection": "output",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 501,
      "width": 451
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Add_InfoText",
                "textAlign": "right"
              }
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Dropdown"
            },
            "position": {
              "basis": "120px",
              "display": false
            },
            "propConfig": {
              "props.options": {
                "binding": {
                  "config": {
                    "queryPath": "Calendar/GetUniqueCategories"
                  },
                  "transforms": [
                    {
                      "code": "\titems \u003d []\n\titems.append({\u0027value\u0027 : \"%\", \u0027label\u0027 : \"All\"})\n\tfor x in range(value.getRowCount()) :\n\t\titems.append({\u0027value\u0027 : value.getValueAt(x,\"Category\"), \u0027label\u0027 : value.getValueAt(x,\"Category\")})\n\t\n\treturn items",
                      "type": "script"
                    }
                  ],
                  "type": "query"
                }
              }
            },
            "props": {
              "dropdownOptionStyle": {
                "classes": "Text/Add_InfoText"
              },
              "style": {
                "classes": "Text/Add_InfoText"
              },
              "value": "%"
            },
            "type": "ia.input.dropdown"
          },
          {
            "meta": {
              "name": "EmbeddedView"
            },
            "position": {
              "basis": "150px"
            },
            "props": {
              "params": {
                "filterData": [
                  {
                    "label": "Classes \u0026 Workshops",
                    "value": "Classes \u0026 Workshops"
                  },
                  {
                    "label": "Seminar",
                    "value": "Seminar"
                  },
                  {
                    "label": "Social Event",
                    "value": "Social Event"
                  },
                  {
                    "label": "Faith Meetings",
                    "value": "Faith Meetings"
                  },
                  {
                    "label": "Fundraising",
                    "value": "Fundraising"
                  },
                  {
                    "label": "Personal Growth",
                    "value": "Personal Growth"
                  }
                ],
                "filterName": "All",
                "selectedValues": null
              },
              "path": "Events/Dashboard/Components/EventList/MultiselectFilter"
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "FlexContainer_0"
        },
        "position": {
          "basis": "35px",
          "shrink": 0
        },
        "props": {
          "alignItems": "center",
          "style": {
            "marginRight": 5
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "FlexRepeater"
            },
            "position": {
              "grow": 1
            },
            "propConfig": {
              "props.instances": {
                "binding": {
                  "config": {
                    "path": "view.custom.items"
                  },
                  "transforms": [
                    {
                      "code": "\tif value \u003d\u003d None:\n\t\treturn []\n\treturn value",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "direction": "column",
              "elementPosition": {
                "basis": "400px"
              },
              "elementStyle": {
                "borderTopColor": "#9db8d1",
                "borderTopStyle": "solid",
                "borderTopWidth": 1
              },
              "path": "Events/Dashboard/Components/EventList/Event Button",
              "style": {
                "marginBottom": 20,
                "marginLeft": 5,
                "marginRight": 5
              },
              "useDefaultViewWidth": false
            },
            "type": "ia.display.flex-repeater"
          }
        ],
        "meta": {
          "name": "FlexContainer"
        },
        "position": {
          "basis": "400px",
          "grow": 1
        },
        "props": {
          "direction": "column",
          "style": {
            "overflow": "hidden"
          }
        },
        "scripts": {
          "customMethods": [],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "Selected_Event",
              "pageScope": true,
              "script": "\t# implement your handler here\n\ttry :\n\t\tself.view.params.SelectedEvent \u003d payload[\u0027lastSelectedEvent\u0027]\n\texcept:\n\t\tpass",
              "sessionScope": false,
              "viewScope": false
            },
            {
              "messageType": "RefreshEventList",
              "pageScope": false,
              "script": "\t# implement your handler here\n\ttry :\n\t\tself.view.refreshBinding(\"custom.eventIDS\")\n\t\tself.view.refreshBinding(\"custom.items\")\n\t\tself.view.params.SelectedEvent \u003d 0\n\texcept :\n\t\tpass",
              "sessionScope": true,
              "viewScope": false
            }
          ]
        },
        "type": "ia.container.flex"
      }
    ],
    "events": {
      "system": {
        "onStartup": {
          "config": {
            "script": "\tself.view.refreshBinding(\"custom.items\")\n\tself.view.params.SelectedEvent \u003d 0"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "marginLeft": "20px",
        "marginRight": "20px"
      }
    },
    "type": "ia.container.flex"
  }
}